/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sifmultitool;

import java.io.IOException;
import java.util.*;
import org.jsoup.Jsoup;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author Alan
 */
public class SIFMultiToolGUI extends javax.swing.JFrame {
    
    Card card1;
    Card card2;
    Card card3;
    Card card4;
    Card card5;
    Card card6;
    Card card7;
    Card card8;
    Card card9;
    JSONArray output;
    
    int[][] SkillLevelCard1 = new int[8][2];
    int[][] SkillLevelCard2 = new int[8][2];
    int[][] SkillLevelCard3 = new int[8][2];
    int[][] SkillLevelCard4 = new int[8][2];
    int[][] SkillLevelCard5 = new int[8][2];
    int[][] SkillLevelCard6 = new int[8][2];
    int[][] SkillLevelCard7 = new int[8][2];
    int[][] SkillLevelCard8 = new int[8][2];
    int[][] SkillLevelCard9 = new int[8][2];

    /**
     * Creates new form SIFMultiToolGUI
     */
    public SIFMultiToolGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabelCard1 = new javax.swing.JLabel();
        jLabelCard2 = new javax.swing.JLabel();
        jLabelCard3 = new javax.swing.JLabel();
        jLabelCard4 = new javax.swing.JLabel();
        jLabelCard5 = new javax.swing.JLabel();
        jLabelCard6 = new javax.swing.JLabel();
        jLabelCard7 = new javax.swing.JLabel();
        jLabelCard8 = new javax.swing.JLabel();
        jLabelCard9 = new javax.swing.JLabel();
        jSpinnerCardID1 = new javax.swing.JSpinner();
        jSpinnerCardID2 = new javax.swing.JSpinner();
        jSpinnerCardID3 = new javax.swing.JSpinner();
        jSpinnerCardID4 = new javax.swing.JSpinner();
        jSpinnerCardID5 = new javax.swing.JSpinner();
        jSpinnerCardID6 = new javax.swing.JSpinner();
        jSpinnerCardID7 = new javax.swing.JSpinner();
        jSpinnerCardID8 = new javax.swing.JSpinner();
        jSpinnerCardID9 = new javax.swing.JSpinner();
        jCheckBoxIdolized1 = new javax.swing.JCheckBox();
        jCheckBoxIdolized2 = new javax.swing.JCheckBox();
        jCheckBoxIdolized3 = new javax.swing.JCheckBox();
        jCheckBoxIdolized4 = new javax.swing.JCheckBox();
        jCheckBoxIdolized5 = new javax.swing.JCheckBox();
        jCheckBoxIdolized6 = new javax.swing.JCheckBox();
        jCheckBoxIdolized7 = new javax.swing.JCheckBox();
        jCheckBoxIdolized8 = new javax.swing.JCheckBox();
        jCheckBoxIdolized9 = new javax.swing.JCheckBox();
        jButtonGetCardData = new javax.swing.JButton();
        jLabelStep1 = new javax.swing.JLabel();
        jLabelSuccess = new javax.swing.JLabel();
        jLabelCardSkill = new javax.swing.JLabel();
        jSpinnerCardSkill1 = new javax.swing.JSpinner();
        jSpinnerCardSkill2 = new javax.swing.JSpinner();
        jSpinnerCardSkill3 = new javax.swing.JSpinner();
        jSpinnerCardSkill4 = new javax.swing.JSpinner();
        jSpinnerCardSkill5 = new javax.swing.JSpinner();
        jSpinnerCardSkill6 = new javax.swing.JSpinner();
        jSpinnerCardSkill7 = new javax.swing.JSpinner();
        jSpinnerCardSkill8 = new javax.swing.JSpinner();
        jSpinnerCardSkill9 = new javax.swing.JSpinner();
        jLabelSIS = new javax.swing.JLabel();
        jLabelCardID = new javax.swing.JLabel();
        jComboBoxSIS1 = new javax.swing.JComboBox<>();
        jComboBoxSIS2 = new javax.swing.JComboBox<>();
        jComboBoxSIS3 = new javax.swing.JComboBox<>();
        jComboBoxSIS4 = new javax.swing.JComboBox<>();
        jComboBoxSIS6 = new javax.swing.JComboBox<>();
        jComboBoxSIS7 = new javax.swing.JComboBox<>();
        jComboBoxSIS8 = new javax.swing.JComboBox<>();
        jComboBoxSIS9 = new javax.swing.JComboBox<>();
        jLabelCenterSkill = new javax.swing.JLabel();
        jComboBoxCenterSkill = new javax.swing.JComboBox<>();
        jLabelAttribute = new javax.swing.JLabel();
        jComboBoxAttribute = new javax.swing.JComboBox<>();
        jLabelSubSkill = new javax.swing.JLabel();
        jComboBoxSubSkill = new javax.swing.JComboBox<>();
        jLabelSongType = new javax.swing.JLabel();
        jComboBoxSongType = new javax.swing.JComboBox<>();
        jLabelNoteCount = new javax.swing.JLabel();
        jSpinnerNoteCount = new javax.swing.JSpinner();
        jLabelTime = new javax.swing.JLabel();
        jSpinnerTime = new javax.swing.JSpinner();
        jLabelPerfect = new javax.swing.JLabel();
        jSpinnerPerfect = new javax.swing.JSpinner();
        jLabelStep2 = new javax.swing.JLabel();
        jButtonCalculate = new javax.swing.JButton();
        jRadioButtonAverage = new javax.swing.JRadioButton();
        jRadioButtonAbsolute = new javax.swing.JRadioButton();
        jComboBoxSIS5 = new javax.swing.JComboBox<>();

        jFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jFrame1.setTitle("Test");
        jFrame1.setName("frame2"); // NOI18N

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(356, Short.MAX_VALUE))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(275, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SIF MultiTool Version 1.0 by Umidah");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(450, 400));
        setSize(new java.awt.Dimension(950, 400));

        jLabelCard1.setText("Card 1");

        jLabelCard2.setText("Card 2");

        jLabelCard3.setText("Card 3");

        jLabelCard4.setText("Card 4");

        jLabelCard5.setText("Card 5");

        jLabelCard6.setText("Card 6");

        jLabelCard7.setText("Card 7");

        jLabelCard8.setText("Card 8");

        jLabelCard9.setText("Card 9");
        jLabelCard9.setToolTipText("");

        jSpinnerCardID1.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID1, "####"));
        jSpinnerCardID1.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID1.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID2.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID2, "####"));
        jSpinnerCardID2.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID2.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID3.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID3, "####"));
        jSpinnerCardID3.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID3.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID4.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID4, "####"));
        jSpinnerCardID4.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID4.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID5.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID5, "####"));
        jSpinnerCardID5.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID5.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID6.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID6, "####"));
        jSpinnerCardID6.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID6.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID7.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID7, "####"));
        jSpinnerCardID7.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID7.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID8.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID8, "####"));
        jSpinnerCardID8.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID8.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID9.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID9, "####"));
        jSpinnerCardID9.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID9.setPreferredSize(new java.awt.Dimension(25, 20));

        jCheckBoxIdolized1.setText("Idolized");

        jCheckBoxIdolized2.setText("Idolized");

        jCheckBoxIdolized3.setText("Idolized");

        jCheckBoxIdolized4.setText("Idolized");

        jCheckBoxIdolized5.setText("Idolized");

        jCheckBoxIdolized6.setText("Idolized");

        jCheckBoxIdolized7.setText("Idolized");

        jCheckBoxIdolized8.setText("Idolized");

        jCheckBoxIdolized9.setText("Idolized");

        jButtonGetCardData.setText("Get Card Data");
        jButtonGetCardData.setToolTipText("");
        jButtonGetCardData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGetCardDataActionPerformed(evt);
            }
        });

        jLabelStep1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelStep1.setText("Step 1:");
        jLabelStep1.setToolTipText("");

        jLabelSuccess.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabelSuccess.setText("Data successfully obtained!");
        jLabelSuccess.setToolTipText("");

        jLabelCardSkill.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelCardSkill.setText("Skill Level");

        jSpinnerCardSkill1.setValue(1);
        jSpinnerCardSkill1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCardSkill1StateChanged(evt);
            }
        });

        jSpinnerCardSkill2.setValue(1);
        jSpinnerCardSkill2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCardSkill2StateChanged(evt);
            }
        });

        jSpinnerCardSkill3.setValue(1);
        jSpinnerCardSkill3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCardSkill3StateChanged(evt);
            }
        });

        jSpinnerCardSkill4.setValue(1);
        jSpinnerCardSkill4.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCardSkill4StateChanged(evt);
            }
        });

        jSpinnerCardSkill5.setValue(1);
        jSpinnerCardSkill5.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCardSkill5StateChanged(evt);
            }
        });

        jSpinnerCardSkill6.setValue(1);
        jSpinnerCardSkill6.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCardSkill6StateChanged(evt);
            }
        });

        jSpinnerCardSkill7.setValue(1);
        jSpinnerCardSkill7.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCardSkill7StateChanged(evt);
            }
        });

        jSpinnerCardSkill8.setValue(1);
        jSpinnerCardSkill8.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCardSkill8StateChanged(evt);
            }
        });

        jSpinnerCardSkill9.setValue(1);
        jSpinnerCardSkill9.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCardSkill9StateChanged(evt);
            }
        });

        jLabelSIS.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelSIS.setText("SIS Configuration");

        jLabelCardID.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelCardID.setText("Card ID");

        jComboBoxSIS1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kiss", "Perfume" }));

        jComboBoxSIS2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kiss", "Perfume" }));
        jComboBoxSIS2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSIS2ActionPerformed(evt);
            }
        });

        jComboBoxSIS3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kiss", "Perfume" }));

        jComboBoxSIS4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kiss", "Perfume" }));

        jComboBoxSIS6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kiss", "Perfume" }));

        jComboBoxSIS7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kiss", "Perfume" }));

        jComboBoxSIS8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kiss", "Perfume" }));

        jComboBoxSIS9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kiss", "Perfume" }));

        jLabelCenterSkill.setText("Center Skill");

        jComboBoxCenterSkill.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0% None", "3% Smile", "3% Pure", "3% Cool", "6% Smile", "6% Pure", "6% Cool", "7% Smile", "7% Pure", "7% Cool", "9% Smile", "9% Pure", "9% Cool", "12% Smile Based on Pure", "12% Smile Based on Cool", "12% Pure Based on Smile", "12% Pure Based on Cool", "12% Cool Based on Smile", "12% Cool Based on Pure" }));

        jLabelAttribute.setText("Attribute");

        jComboBoxAttribute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Smile", "Pure", "Cool" }));
        jComboBoxAttribute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAttributeActionPerformed(evt);
            }
        });

        jLabelSubSkill.setText("Sub Skill");

        jComboBoxSubSkill.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabelSongType.setText("Song Type");

        jComboBoxSongType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "μ's", "Aqours" }));

        jLabelNoteCount.setText("Note Count");

        jSpinnerNoteCount.setValue(50);

        jLabelTime.setText("Time (s)");

        jSpinnerTime.setValue(120);

        jLabelPerfect.setText("Perfect %");

        jSpinnerPerfect.setValue(75);

        jLabelStep2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelStep2.setText("Step 2:");

        jButtonCalculate.setText("Calculate");

        jRadioButtonAverage.setSelected(true);
        jRadioButtonAverage.setText("Average");
        jRadioButtonAverage.setToolTipText("");

        jRadioButtonAbsolute.setText("Absolute");

        jComboBoxSIS5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kiss", "Perfume", "Kiss + Perfume" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabelCardID)
                        .addGap(80, 80, 80)
                        .addComponent(jLabelCardSkill))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelStep1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonGetCardData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelSuccess, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCard1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSpinnerCardID1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxIdolized1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCard2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSpinnerCardID2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxIdolized2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCard3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSpinnerCardID3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxIdolized3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCard4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSpinnerCardID4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxIdolized4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCard5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSpinnerCardID5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxIdolized5))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCard6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSpinnerCardID6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxIdolized6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCard7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSpinnerCardID7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxIdolized7))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCard8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSpinnerCardID8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxIdolized8))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCard9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSpinnerCardID9, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxIdolized9)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSpinnerCardSkill1)
                                    .addComponent(jSpinnerCardSkill2)
                                    .addComponent(jSpinnerCardSkill3)
                                    .addComponent(jSpinnerCardSkill4)
                                    .addComponent(jSpinnerCardSkill5)
                                    .addComponent(jSpinnerCardSkill6)
                                    .addComponent(jSpinnerCardSkill7)
                                    .addComponent(jSpinnerCardSkill8)
                                    .addComponent(jSpinnerCardSkill9))))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSIS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jComboBoxSIS5, javax.swing.GroupLayout.Alignment.LEADING, 0, 100, Short.MAX_VALUE)
                            .addComponent(jComboBoxSIS4, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxSIS3, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxSIS2, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxSIS1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxSIS6, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxSIS7, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxSIS8, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxSIS9, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButtonAverage)
                                    .addComponent(jLabelStep2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonCalculate)
                                    .addComponent(jRadioButtonAbsolute)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelSubSkill)
                                .addGap(25, 25, 25)
                                .addComponent(jComboBoxSubSkill, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelPerfect)
                                    .addComponent(jLabelNoteCount)
                                    .addComponent(jLabelAttribute))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jSpinnerNoteCount, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                        .addComponent(jSpinnerPerfect))
                                    .addComponent(jComboBoxAttribute, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelSongType)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBoxSongType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelTime)
                                        .addGap(17, 17, 17)
                                        .addComponent(jSpinnerTime, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelCenterSkill)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxCenterSkill, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 36, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCardID)
                    .addComponent(jLabelCardSkill)
                    .addComponent(jLabelSIS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCard1)
                    .addComponent(jSpinnerCardID1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized1)
                    .addComponent(jSpinnerCardSkill1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSIS1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAttribute)
                    .addComponent(jComboBoxAttribute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSongType)
                    .addComponent(jComboBoxSongType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCard2)
                    .addComponent(jSpinnerCardID2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized2)
                    .addComponent(jSpinnerCardSkill2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSIS2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNoteCount)
                    .addComponent(jSpinnerNoteCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTime)
                    .addComponent(jSpinnerTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCard3)
                    .addComponent(jSpinnerCardID3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized3)
                    .addComponent(jSpinnerCardSkill3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSIS3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPerfect)
                    .addComponent(jSpinnerPerfect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCard4)
                    .addComponent(jSpinnerCardID4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized4)
                    .addComponent(jSpinnerCardSkill4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSIS4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCard5)
                    .addComponent(jSpinnerCardID5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized5)
                    .addComponent(jSpinnerCardSkill5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSIS5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCenterSkill)
                    .addComponent(jComboBoxCenterSkill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCard6)
                    .addComponent(jSpinnerCardID6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized6)
                    .addComponent(jSpinnerCardSkill6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSIS6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSubSkill)
                    .addComponent(jComboBoxSubSkill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCard7)
                    .addComponent(jSpinnerCardID7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized7)
                    .addComponent(jSpinnerCardSkill7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSIS7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCard8)
                    .addComponent(jSpinnerCardID8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized8)
                    .addComponent(jSpinnerCardSkill8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSIS8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonAverage)
                    .addComponent(jRadioButtonAbsolute))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCard9)
                    .addComponent(jSpinnerCardID9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized9)
                    .addComponent(jSpinnerCardSkill9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSIS9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelStep2)
                    .addComponent(jButtonCalculate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGetCardData)
                    .addComponent(jLabelStep1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelSuccess)
                .addContainerGap(92, Short.MAX_VALUE))
        );

        jLabelSuccess.setVisible(false);
        jLabelCardSkill.setVisible(false);
        jSpinnerCardSkill1.setVisible(false);
        jSpinnerCardSkill2.setVisible(false);
        jSpinnerCardSkill3.setVisible(false);
        jSpinnerCardSkill4.setVisible(false);
        jSpinnerCardSkill5.setVisible(false);
        jSpinnerCardSkill6.setVisible(false);
        jSpinnerCardSkill7.setVisible(false);
        jSpinnerCardSkill8.setVisible(false);
        jSpinnerCardSkill9.setVisible(false);
        jLabelSIS.setVisible(false);
        jComboBoxSIS1.setVisible(false);
        jComboBoxSIS2.setVisible(false);
        jComboBoxSIS3.setVisible(false);
        jComboBoxSIS4.setVisible(false);
        jComboBoxSIS6.setVisible(false);
        jComboBoxSIS7.setVisible(false);
        jComboBoxSIS8.setVisible(false);
        jComboBoxSIS9.setVisible(false);
        jLabelCenterSkill.setVisible(false);
        jComboBoxCenterSkill.setVisible(false);
        jLabelAttribute.setVisible(false);
        jComboBoxAttribute.setVisible(false);
        jLabelSubSkill.setVisible(false);
        jComboBoxSubSkill.setVisible(false);
        jLabelSongType.setVisible(false);
        jComboBoxSongType.setVisible(false);
        jLabelNoteCount.setVisible(false);
        jSpinnerNoteCount.setVisible(false);
        jLabelTime.setVisible(false);
        jSpinnerTime.setVisible(false);
        jLabelPerfect.setVisible(false);
        jSpinnerPerfect.setVisible(false);
        jLabelStep2.setVisible(false);
        jButtonCalculate.setVisible(false);
        jRadioButtonAverage.setVisible(false);
        jRadioButtonAbsolute.setVisible(false);
        jComboBoxSIS5.setVisible(false);

        setBounds(0, 0, 748, 543);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGetCardDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGetCardDataActionPerformed
        // TODO add your handling code here:
        
        UserInput userInput = new UserInput();
        
        setCardID(userInput);
        
        // Check for valid card ID
        try {
            if (!isValidID(userInput)) {
                jLabelSuccess.setText("Error: Invalid Card ID");
                jLabelSuccess.setVisible(true);
                return;
            }
        } catch (IOException e) {
                e.printStackTrace();
        }
        
        setIdolized(userInput);
        

        int[] cardIDs = { Integer.parseInt(userInput.getCard1ID()), Integer.parseInt(userInput.getCard2ID()), Integer.parseInt(userInput.getCard3ID()),
                          Integer.parseInt(userInput.getCard4ID()), Integer.parseInt(userInput.getCard5ID()), Integer.parseInt(userInput.getCard6ID()),
                          Integer.parseInt(userInput.getCard7ID()), Integer.parseInt(userInput.getCard8ID()), Integer.parseInt(userInput.getCard9ID()),
                        }; 
        
        GetCardJSON cardJSON = new GetCardJSON();
        
        try {
            createCards(cardIDs, cardJSON, userInput);
        } catch (IOException e) {
            e.printStackTrace();
        }
        
        try {
            generateSkillTables(cardIDs);
            
            addSkillTables();
            
            addSIS();
            
            addCenterSkill();
            
            addTheRest();
            
            System.out.println("Part 1 Done.");
            
	} catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
	}
        
         jLabelSuccess.setText("Success!");
         jLabelSuccess.setVisible(true);
        
    }//GEN-LAST:event_jButtonGetCardDataActionPerformed

    private void addTheRest() {
        jLabelAttribute.setVisible(true);
        jComboBoxAttribute.setVisible(true);
        
        jLabelSongType.setVisible(true);
        jComboBoxSongType.setVisible(true);
        
        jLabelNoteCount.setVisible(true);
        jSpinnerNoteCount.setVisible(true);
        
        jLabelTime.setVisible(true);
        jSpinnerTime.setVisible(true);
        
        jLabelPerfect.setVisible(true);
        jSpinnerPerfect.setVisible(true);
        
        jRadioButtonAverage.setVisible(true);
        jRadioButtonAbsolute.setVisible(true);
        
        jLabelStep2.setVisible(true);
        jButtonCalculate.setVisible(true);
    }

    private void addCenterSkill() {
        jLabelCenterSkill.setVisible(true);
        jComboBoxCenterSkill.setVisible(true);
        
        jLabelSubSkill.setVisible(true);
        jComboBoxSubSkill.setVisible(true);
    }

    private void addSIS() {
        jLabelSIS.setVisible(true);
        jComboBoxSIS1.setVisible(true);
        jComboBoxSIS2.setVisible(true);
        jComboBoxSIS3.setVisible(true);
        jComboBoxSIS4.setVisible(true);
        jComboBoxSIS5.setVisible(true);
        jComboBoxSIS6.setVisible(true);
        jComboBoxSIS7.setVisible(true);
        jComboBoxSIS8.setVisible(true);
        jComboBoxSIS9.setVisible(true);
    }

    private void addSkillTables() {
        boolean allZero = true;
        if (SkillLevelCard1[0][0] != 0) {
            card1.setSkillLevelTable(SkillLevelCard1);
            jSpinnerCardSkill1.setVisible(true);
            allZero = false;
        }
        
        if (SkillLevelCard2[0][0] != 0) {
            card2.setSkillLevelTable(SkillLevelCard2);
            jSpinnerCardSkill2.setVisible(true);
            allZero = false;
        }
        
        if (SkillLevelCard3[0][0] != 0) {
            card3.setSkillLevelTable(SkillLevelCard3);
            jSpinnerCardSkill3.setVisible(true);
            allZero = false;
        }
        
        if (SkillLevelCard4[0][0] != 0) {
            card4.setSkillLevelTable(SkillLevelCard4);
            jSpinnerCardSkill4.setVisible(true);
            allZero = false;
        }
        
        if (SkillLevelCard5[0][0] != 0) {
            card5.setSkillLevelTable(SkillLevelCard5);
            jSpinnerCardSkill5.setVisible(true);
            allZero = false;
        }
        
        if (SkillLevelCard6[0][0] != 0) {
            card6.setSkillLevelTable(SkillLevelCard6);
            jSpinnerCardSkill6.setVisible(true);
            allZero = false;
        }
        
        if (SkillLevelCard7[0][0] != 0) {
            card7.setSkillLevelTable(SkillLevelCard7);
            jSpinnerCardSkill7.setVisible(true);
            allZero = false;
        }
        
        if (SkillLevelCard8[0][0] != 0) {
            card8.setSkillLevelTable(SkillLevelCard8);
            jSpinnerCardSkill8.setVisible(true);
            allZero = false;
        }
        
        if (SkillLevelCard9[0][0] != 0) {
            card9.setSkillLevelTable(SkillLevelCard9);
            jSpinnerCardSkill9.setVisible(true);
            allZero = false;
        }
        
        if (!allZero) {
            jLabelCardSkill.setVisible(true);
        }

    }

    private void generateSkillTables(int[] cardIDs) throws NumberFormatException, IOException {
        for (int i = 0; i < 9; i++) {
            if (cardIDs[i] > 0) {
                
                String html = Jsoup.connect("https://sif.kirara.ca/card/" + Integer.toString(cardIDs[i])).get().html();
                int indexBegin = html.indexOf("document.precalc");
                int indexEnd = html.indexOf("document.cllite_ids");
             //   System.out.println(html.substring(indexBegin, indexEnd));
                
                html = html.substring(indexBegin, indexEnd);
                indexBegin = html.indexOf("skill");
                indexEnd = html.indexOf("cid");
             //   System.out.println(html.substring(indexBegin, indexEnd));
                
                html = html.substring(indexBegin, indexEnd);
                
                if (html.contains("null")) {
                    
                }
                
                else {
                    String temp;
                    
                    for (int j = 0; j < 8; j++) {
                        
                        if (i == 0) {
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard1[j][0] = Integer.parseInt(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard1[j][1] = (int) Double.parseDouble(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                        }
                        
                        else if (i == 1) {
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard2[j][0] = Integer.parseInt(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard2[j][1] = (int) Double.parseDouble(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                        }
                        
                        else if (i == 2) {
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard3[j][0] = Integer.parseInt(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard3[j][1] = (int) Double.parseDouble(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                        }
                        
                        else if (i == 3) {
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard4[j][0] = Integer.parseInt(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard4[j][1] = (int) Double.parseDouble(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                        }
                        
                        else if (i == 4) {
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard5[j][0] = Integer.parseInt(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard5[j][1] = (int) Double.parseDouble(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                        }
                        
                        else if (i == 5) {
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard6[j][0] = Integer.parseInt(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard6[j][1] = (int) Double.parseDouble(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                        }
                        
                        else if (i == 6) {
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard7[j][0] = Integer.parseInt(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard7[j][1] = (int) Double.parseDouble(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                        }
                        
                        else if (i == 7) {
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard8[j][0] = Integer.parseInt(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard8[j][1] = (int) Double.parseDouble(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                        }
                        
                        else {
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard9[j][0] = Integer.parseInt(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard9[j][1] = (int) Double.parseDouble(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                        }
                        
                    }
                    
                }
                
                
                
            }
            
        }
    }

    private void createCards(int[] cardIDs, GetCardJSON cardJSON, UserInput userInput) throws IOException {
        if (cardIDs[0] > 0) {
            output = cardJSON.readJSONFromURL(Integer.toString(cardIDs[0]));
            card1 = new Card(output, userInput, 1);
        }
        
        if (cardIDs[1] > 0) {
            output = cardJSON.readJSONFromURL(Integer.toString(cardIDs[1]));
            card2 = new Card(output, userInput, 2);
        }
        
        if (cardIDs[2] > 0) {
            output = cardJSON.readJSONFromURL(Integer.toString(cardIDs[2]));
            card3 = new Card(output, userInput, 3);
        }
        
        if (cardIDs[3] > 0) {
            output = cardJSON.readJSONFromURL(Integer.toString(cardIDs[3]));
            card4 = new Card(output, userInput, 4);
        }
        
        if (cardIDs[4] > 0) {
            output = cardJSON.readJSONFromURL(Integer.toString(cardIDs[4]));
            card5 = new Card(output, userInput, 5);
        }
        
        if (cardIDs[5] > 0) {
            output = cardJSON.readJSONFromURL(Integer.toString(cardIDs[5]));
            card6 = new Card(output, userInput, 6);
        }
        
        if (cardIDs[6] > 0) {
            output = cardJSON.readJSONFromURL(Integer.toString(cardIDs[6]));
            card7 = new Card(output, userInput, 7);
        }
        
        if (cardIDs[7] > 0) {
            output = cardJSON.readJSONFromURL(Integer.toString(cardIDs[7]));
            card8 = new Card(output, userInput, 8);
        }
        
        if (cardIDs[8] > 0) {
            output = cardJSON.readJSONFromURL(Integer.toString(cardIDs[8]));
            card9 = new Card(output, userInput, 9);
        }
    }

    private boolean isValidID(UserInput userInput) throws IOException, NumberFormatException {
        // Check if Card IDs are valid
        try {
            // GET total number of cards
            GetCardJSON cardJSONTotal = new GetCardJSON();
            JSONArray cardTotalArray = cardJSONTotal.readJSONFromURL("");
            JSONObject cardTotalObject = cardTotalArray.getJSONObject(0);
            if (Integer.parseInt(userInput.getCard1ID()) > cardTotalObject.getInt("count") ||
                Integer.parseInt(userInput.getCard2ID()) > cardTotalObject.getInt("count") ||
                Integer.parseInt(userInput.getCard3ID()) > cardTotalObject.getInt("count") ||    
                Integer.parseInt(userInput.getCard4ID()) > cardTotalObject.getInt("count") ||    
                Integer.parseInt(userInput.getCard5ID()) > cardTotalObject.getInt("count") ||    
                Integer.parseInt(userInput.getCard6ID()) > cardTotalObject.getInt("count") || 
                Integer.parseInt(userInput.getCard7ID()) > cardTotalObject.getInt("count") ||
                Integer.parseInt(userInput.getCard8ID()) > cardTotalObject.getInt("count") ||    
                Integer.parseInt(userInput.getCard9ID()) > cardTotalObject.getInt("count")) 
                {
                    return false;
                }
        } catch (JSONException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        return true;
    }

    private void setIdolized(UserInput userInput) {
        userInput.setCard1Idolized(jCheckBoxIdolized1.isSelected());
        userInput.setCard2Idolized(jCheckBoxIdolized2.isSelected());
        userInput.setCard3Idolized(jCheckBoxIdolized3.isSelected());
        userInput.setCard4Idolized(jCheckBoxIdolized4.isSelected());
        userInput.setCard5Idolized(jCheckBoxIdolized5.isSelected());
        userInput.setCard6Idolized(jCheckBoxIdolized6.isSelected());
        userInput.setCard7Idolized(jCheckBoxIdolized7.isSelected());
        userInput.setCard8Idolized(jCheckBoxIdolized8.isSelected());
        userInput.setCard9Idolized(jCheckBoxIdolized9.isSelected());
    }

    private void setCardID(UserInput userInput) {
        userInput.setCard1ID(jSpinnerCardID1.getValue().toString());
        userInput.setCard2ID(jSpinnerCardID2.getValue().toString());
        userInput.setCard3ID(jSpinnerCardID3.getValue().toString());
        userInput.setCard4ID(jSpinnerCardID4.getValue().toString());
        userInput.setCard5ID(jSpinnerCardID5.getValue().toString());
        userInput.setCard6ID(jSpinnerCardID6.getValue().toString());
        userInput.setCard7ID(jSpinnerCardID7.getValue().toString());
        userInput.setCard8ID(jSpinnerCardID8.getValue().toString());
        userInput.setCard9ID(jSpinnerCardID9.getValue().toString());
    }

    private void jSpinnerCardSkill1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCardSkill1StateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerCardSkill1.getValue() > 8) {
            jSpinnerCardSkill1.setValue("8");
        }
        else if ((int) jSpinnerCardSkill1.getValue() < 1) {
            jSpinnerCardSkill1.setValue("1");
        }
    }//GEN-LAST:event_jSpinnerCardSkill1StateChanged

    private void jSpinnerCardSkill2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCardSkill2StateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerCardSkill2.getValue() > 8) {
            jSpinnerCardSkill2.setValue("8");
        }
        else if ((int) jSpinnerCardSkill2.getValue() < 1) {
            jSpinnerCardSkill2.setValue("1");
        }
    }//GEN-LAST:event_jSpinnerCardSkill2StateChanged

    private void jSpinnerCardSkill3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCardSkill3StateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerCardSkill3.getValue() > 8) {
            jSpinnerCardSkill3.setValue("8");
        }
        else if ((int) jSpinnerCardSkill3.getValue() < 1) {
            jSpinnerCardSkill3.setValue("1");
        }
    }//GEN-LAST:event_jSpinnerCardSkill3StateChanged

    private void jSpinnerCardSkill4StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCardSkill4StateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerCardSkill4.getValue() > 8) {
            jSpinnerCardSkill4.setValue("8");
        }
        else if ((int) jSpinnerCardSkill4.getValue() < 1) {
            jSpinnerCardSkill4.setValue("1");
        }
    }//GEN-LAST:event_jSpinnerCardSkill4StateChanged

    private void jSpinnerCardSkill5StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCardSkill5StateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerCardSkill5.getValue() > 8) {
            jSpinnerCardSkill5.setValue("8");
        }
        else if ((int) jSpinnerCardSkill5.getValue() < 1) {
            jSpinnerCardSkill5.setValue("1");
        }
    }//GEN-LAST:event_jSpinnerCardSkill5StateChanged

    private void jSpinnerCardSkill6StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCardSkill6StateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerCardSkill6.getValue() > 8) {
            jSpinnerCardSkill6.setValue("8");
        }
        else if ((int) jSpinnerCardSkill6.getValue() < 1) {
            jSpinnerCardSkill6.setValue("1");
        }
    }//GEN-LAST:event_jSpinnerCardSkill6StateChanged

    private void jSpinnerCardSkill7StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCardSkill7StateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerCardSkill7.getValue() > 8) {
            jSpinnerCardSkill7.setValue("8");
        }
        else if ((int) jSpinnerCardSkill7.getValue() < 1) {
            jSpinnerCardSkill7.setValue("1");
        }
    }//GEN-LAST:event_jSpinnerCardSkill7StateChanged

    private void jSpinnerCardSkill8StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCardSkill8StateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerCardSkill8.getValue() > 8) {
            jSpinnerCardSkill8.setValue("8");
        }
        else if ((int) jSpinnerCardSkill8.getValue() < 1) {
            jSpinnerCardSkill8.setValue("1");
        }
    }//GEN-LAST:event_jSpinnerCardSkill8StateChanged

    private void jSpinnerCardSkill9StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCardSkill9StateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerCardSkill9.getValue() > 8) {
            jSpinnerCardSkill9.setValue("8");
        }
        else if ((int) jSpinnerCardSkill9.getValue() < 1) {
            jSpinnerCardSkill9.setValue("1");
        }
    }//GEN-LAST:event_jSpinnerCardSkill9StateChanged

    private void jComboBoxSIS2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSIS2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSIS2ActionPerformed

    private void jComboBoxAttributeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAttributeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxAttributeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SIFMultiToolGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SIFMultiToolGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SIFMultiToolGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SIFMultiToolGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SIFMultiToolGUI().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCalculate;
    private javax.swing.JButton jButtonGetCardData;
    private javax.swing.JCheckBox jCheckBoxIdolized1;
    private javax.swing.JCheckBox jCheckBoxIdolized2;
    private javax.swing.JCheckBox jCheckBoxIdolized3;
    private javax.swing.JCheckBox jCheckBoxIdolized4;
    private javax.swing.JCheckBox jCheckBoxIdolized5;
    private javax.swing.JCheckBox jCheckBoxIdolized6;
    private javax.swing.JCheckBox jCheckBoxIdolized7;
    private javax.swing.JCheckBox jCheckBoxIdolized8;
    private javax.swing.JCheckBox jCheckBoxIdolized9;
    private javax.swing.JComboBox<String> jComboBoxAttribute;
    private javax.swing.JComboBox<String> jComboBoxCenterSkill;
    private javax.swing.JComboBox<String> jComboBoxSIS1;
    private javax.swing.JComboBox<String> jComboBoxSIS2;
    private javax.swing.JComboBox<String> jComboBoxSIS3;
    private javax.swing.JComboBox<String> jComboBoxSIS4;
    private javax.swing.JComboBox<String> jComboBoxSIS5;
    private javax.swing.JComboBox<String> jComboBoxSIS6;
    private javax.swing.JComboBox<String> jComboBoxSIS7;
    private javax.swing.JComboBox<String> jComboBoxSIS8;
    private javax.swing.JComboBox<String> jComboBoxSIS9;
    private javax.swing.JComboBox<String> jComboBoxSongType;
    private javax.swing.JComboBox<String> jComboBoxSubSkill;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelAttribute;
    private javax.swing.JLabel jLabelCard1;
    private javax.swing.JLabel jLabelCard2;
    private javax.swing.JLabel jLabelCard3;
    private javax.swing.JLabel jLabelCard4;
    private javax.swing.JLabel jLabelCard5;
    private javax.swing.JLabel jLabelCard6;
    private javax.swing.JLabel jLabelCard7;
    private javax.swing.JLabel jLabelCard8;
    private javax.swing.JLabel jLabelCard9;
    private javax.swing.JLabel jLabelCardID;
    private javax.swing.JLabel jLabelCardSkill;
    private javax.swing.JLabel jLabelCenterSkill;
    private javax.swing.JLabel jLabelNoteCount;
    private javax.swing.JLabel jLabelPerfect;
    private javax.swing.JLabel jLabelSIS;
    private javax.swing.JLabel jLabelSongType;
    private javax.swing.JLabel jLabelStep1;
    private javax.swing.JLabel jLabelStep2;
    private javax.swing.JLabel jLabelSubSkill;
    private javax.swing.JLabel jLabelSuccess;
    private javax.swing.JLabel jLabelTime;
    private javax.swing.JRadioButton jRadioButtonAbsolute;
    private javax.swing.JRadioButton jRadioButtonAverage;
    private javax.swing.JSpinner jSpinnerCardID1;
    private javax.swing.JSpinner jSpinnerCardID2;
    private javax.swing.JSpinner jSpinnerCardID3;
    private javax.swing.JSpinner jSpinnerCardID4;
    private javax.swing.JSpinner jSpinnerCardID5;
    private javax.swing.JSpinner jSpinnerCardID6;
    private javax.swing.JSpinner jSpinnerCardID7;
    private javax.swing.JSpinner jSpinnerCardID8;
    private javax.swing.JSpinner jSpinnerCardID9;
    private javax.swing.JSpinner jSpinnerCardSkill1;
    private javax.swing.JSpinner jSpinnerCardSkill2;
    private javax.swing.JSpinner jSpinnerCardSkill3;
    private javax.swing.JSpinner jSpinnerCardSkill4;
    private javax.swing.JSpinner jSpinnerCardSkill5;
    private javax.swing.JSpinner jSpinnerCardSkill6;
    private javax.swing.JSpinner jSpinnerCardSkill7;
    private javax.swing.JSpinner jSpinnerCardSkill8;
    private javax.swing.JSpinner jSpinnerCardSkill9;
    private javax.swing.JSpinner jSpinnerNoteCount;
    private javax.swing.JSpinner jSpinnerPerfect;
    private javax.swing.JSpinner jSpinnerTime;
    // End of variables declaration//GEN-END:variables

}

