package sifmultitool;

import java.io.IOException;
import org.jsoup.Jsoup;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author Umidah
 */
public class SIFMultiToolGUI extends javax.swing.JFrame {
    
    int[] specialCards = { 83, 146, 147, 148, 379, 380, 381, 382, 383, 384, 385, 386, 
                           387, 388, 389, 390, 629, 1022, 1048, 1070, 1083, 1136};
    
    Card card1;
    Card card2;
    Card card3;
    Card card4;
    Card card5;
    Card card6;
    Card card7;
    Card card8;
    Card card9;
    JSONArray output;
    
    UserInput userInput;
    
    int[][] SkillLevelCard1 = new int[8][2];
    int[][] SkillLevelCard2 = new int[8][2];
    int[][] SkillLevelCard3 = new int[8][2];
    int[][] SkillLevelCard4 = new int[8][2];
    int[][] SkillLevelCard5 = new int[8][2];
    int[][] SkillLevelCard6 = new int[8][2];
    int[][] SkillLevelCard7 = new int[8][2];
    int[][] SkillLevelCard8 = new int[8][2];
    int[][] SkillLevelCard9 = new int[8][2];

    /**
     * Creates new form SIFMultiToolGUI
     */
    public SIFMultiToolGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrameResult = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableResults = new javax.swing.JTable();
        buttonGroupCalculate = new javax.swing.ButtonGroup();
        jLabelCard1 = new javax.swing.JLabel();
        jLabelCard2 = new javax.swing.JLabel();
        jLabelCard3 = new javax.swing.JLabel();
        jLabelCard4 = new javax.swing.JLabel();
        jLabelCard5 = new javax.swing.JLabel();
        jLabelCard6 = new javax.swing.JLabel();
        jLabelCard7 = new javax.swing.JLabel();
        jLabelCard8 = new javax.swing.JLabel();
        jLabelCard9 = new javax.swing.JLabel();
        jSpinnerCardID1 = new javax.swing.JSpinner();
        jSpinnerCardID2 = new javax.swing.JSpinner();
        jSpinnerCardID3 = new javax.swing.JSpinner();
        jSpinnerCardID4 = new javax.swing.JSpinner();
        jSpinnerCardID5 = new javax.swing.JSpinner();
        jSpinnerCardID6 = new javax.swing.JSpinner();
        jSpinnerCardID7 = new javax.swing.JSpinner();
        jSpinnerCardID8 = new javax.swing.JSpinner();
        jSpinnerCardID9 = new javax.swing.JSpinner();
        jCheckBoxIdolized1 = new javax.swing.JCheckBox();
        jCheckBoxIdolized2 = new javax.swing.JCheckBox();
        jCheckBoxIdolized3 = new javax.swing.JCheckBox();
        jCheckBoxIdolized4 = new javax.swing.JCheckBox();
        jCheckBoxIdolized5 = new javax.swing.JCheckBox();
        jCheckBoxIdolized6 = new javax.swing.JCheckBox();
        jCheckBoxIdolized7 = new javax.swing.JCheckBox();
        jCheckBoxIdolized8 = new javax.swing.JCheckBox();
        jCheckBoxIdolized9 = new javax.swing.JCheckBox();
        jButtonGetCardData = new javax.swing.JButton();
        jLabelStep1 = new javax.swing.JLabel();
        jLabelSuccess = new javax.swing.JLabel();
        jLabelCardSkill = new javax.swing.JLabel();
        jSpinnerCardSkill1 = new javax.swing.JSpinner();
        jSpinnerCardSkill2 = new javax.swing.JSpinner();
        jSpinnerCardSkill3 = new javax.swing.JSpinner();
        jSpinnerCardSkill4 = new javax.swing.JSpinner();
        jSpinnerCardSkill5 = new javax.swing.JSpinner();
        jSpinnerCardSkill6 = new javax.swing.JSpinner();
        jSpinnerCardSkill7 = new javax.swing.JSpinner();
        jSpinnerCardSkill8 = new javax.swing.JSpinner();
        jSpinnerCardSkill9 = new javax.swing.JSpinner();
        jLabelSIS = new javax.swing.JLabel();
        jLabelCardID = new javax.swing.JLabel();
        jComboBoxSIS1 = new javax.swing.JComboBox<>();
        jComboBoxSIS2 = new javax.swing.JComboBox<>();
        jComboBoxSIS3 = new javax.swing.JComboBox<>();
        jComboBoxSIS4 = new javax.swing.JComboBox<>();
        jComboBoxSIS6 = new javax.swing.JComboBox<>();
        jComboBoxSIS7 = new javax.swing.JComboBox<>();
        jComboBoxSIS8 = new javax.swing.JComboBox<>();
        jComboBoxSIS9 = new javax.swing.JComboBox<>();
        jLabelCenterSkill = new javax.swing.JLabel();
        jComboBoxCenterSkill = new javax.swing.JComboBox<>();
        jLabelAttribute = new javax.swing.JLabel();
        jComboBoxAttribute = new javax.swing.JComboBox<>();
        jLabelSubSkill = new javax.swing.JLabel();
        jComboBoxSubSkill = new javax.swing.JComboBox<>();
        jLabelSongType = new javax.swing.JLabel();
        jComboBoxSongType = new javax.swing.JComboBox<>();
        jLabelNoteCount = new javax.swing.JLabel();
        jSpinnerNoteCount = new javax.swing.JSpinner();
        jLabelTime = new javax.swing.JLabel();
        jSpinnerTime = new javax.swing.JSpinner();
        jLabelStep2 = new javax.swing.JLabel();
        jButtonCalculate = new javax.swing.JButton();
        jRadioButtonAverage = new javax.swing.JRadioButton();
        jRadioButtonAbsolute = new javax.swing.JRadioButton();
        jComboBoxSIS5 = new javax.swing.JComboBox<>();
        jLabelBasedOn = new javax.swing.JLabel();
        jComboBoxBasedOn = new javax.swing.JComboBox<>();
        jCheckBoxMatchingFriendCenter = new javax.swing.JCheckBox();
        jLabelStarNotes = new javax.swing.JLabel();
        jSpinnerStarNotes = new javax.swing.JSpinner();
        jCheckBoxNormalizeSong = new javax.swing.JCheckBox();
        jCheckBoxAllIdolized = new javax.swing.JCheckBox();
        jLabelPerfect = new javax.swing.JLabel();
        jSpinnerPerfect = new javax.swing.JSpinner();

        jFrameResult.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jFrameResult.setTitle("Result");
        jFrameResult.setName("frame2"); // NOI18N
        jFrameResult.setSize(new java.awt.Dimension(750, 400));

        jTableResults.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Card 1", null, null, null, null, null, null, null},
                {"Card 2", null, null, null, null, null, null, null},
                {"Card 3", null, null, null, null, null, null, null},
                {"Card 4", null, null, null, null, null, null, null},
                {"Card 5", null, null, null, null, null, null, null},
                {"Card 6", null, null, null, null, null, null, null},
                {"Card 7", null, null, null, null, null, null, null},
                {"Card 8", null, null, null, null, null, null, null},
                {"Card 9", null, null, null, null, null, null, null},
                {"Final Total", null, null, null, null, null, null, null}
            },
            new String [] {
                "Results", "Card Name", "Collection", "Initial Stat", "Final Stat", "Note Score", "Skill Score", "Final Score"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableResults);

        javax.swing.GroupLayout jFrameResultLayout = new javax.swing.GroupLayout(jFrameResult.getContentPane());
        jFrameResult.getContentPane().setLayout(jFrameResultLayout);
        jFrameResultLayout.setHorizontalGroup(
            jFrameResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrameResultLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
                .addContainerGap())
        );
        jFrameResultLayout.setVerticalGroup(
            jFrameResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrameResultLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SIF MultiTool Version 1.0 by Umidah");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(450, 400));
        setSize(new java.awt.Dimension(950, 400));

        jLabelCard1.setText("Card 1");

        jLabelCard2.setText("Card 2");

        jLabelCard3.setText("Card 3");

        jLabelCard4.setText("Card 4");

        jLabelCard5.setText("Card 5");

        jLabelCard6.setText("Card 6");

        jLabelCard7.setText("Card 7");

        jLabelCard8.setText("Card 8");

        jLabelCard9.setText("Card 9");
        jLabelCard9.setToolTipText("");

        jSpinnerCardID1.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID1, "####"));
        jSpinnerCardID1.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID1.setPreferredSize(new java.awt.Dimension(25, 20));
        jSpinnerCardID1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCardID1StateChanged(evt);
            }
        });

        jSpinnerCardID2.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID2, "####"));
        jSpinnerCardID2.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID2.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID3.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID3, "####"));
        jSpinnerCardID3.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID3.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID4.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID4, "####"));
        jSpinnerCardID4.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID4.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID5.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID5, "####"));
        jSpinnerCardID5.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID5.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID6.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID6, "####"));
        jSpinnerCardID6.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID6.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID7.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID7, "####"));
        jSpinnerCardID7.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID7.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID8.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID8, "####"));
        jSpinnerCardID8.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID8.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID9.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID9, "####"));
        jSpinnerCardID9.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID9.setPreferredSize(new java.awt.Dimension(25, 20));

        jCheckBoxIdolized1.setText("Idolized");

        jCheckBoxIdolized2.setText("Idolized");

        jCheckBoxIdolized3.setText("Idolized");

        jCheckBoxIdolized4.setText("Idolized");

        jCheckBoxIdolized5.setText("Idolized");

        jCheckBoxIdolized6.setText("Idolized");

        jCheckBoxIdolized7.setText("Idolized");

        jCheckBoxIdolized8.setText("Idolized");

        jCheckBoxIdolized9.setText("Idolized");

        jButtonGetCardData.setText("Get Card Data");
        jButtonGetCardData.setToolTipText("");
        jButtonGetCardData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGetCardDataActionPerformed(evt);
            }
        });

        jLabelStep1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelStep1.setText("Step 1:");
        jLabelStep1.setToolTipText("");

        jLabelSuccess.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabelSuccess.setText("Data successfully obtained!");
        jLabelSuccess.setToolTipText("");

        jLabelCardSkill.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelCardSkill.setText("Skill Level");

        jSpinnerCardSkill1.setValue(1);
        jSpinnerCardSkill1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCardSkill1StateChanged(evt);
            }
        });

        jSpinnerCardSkill2.setValue(1);
        jSpinnerCardSkill2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCardSkill2StateChanged(evt);
            }
        });

        jSpinnerCardSkill3.setValue(1);
        jSpinnerCardSkill3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCardSkill3StateChanged(evt);
            }
        });

        jSpinnerCardSkill4.setValue(1);
        jSpinnerCardSkill4.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCardSkill4StateChanged(evt);
            }
        });

        jSpinnerCardSkill5.setValue(1);
        jSpinnerCardSkill5.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCardSkill5StateChanged(evt);
            }
        });

        jSpinnerCardSkill6.setValue(1);
        jSpinnerCardSkill6.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCardSkill6StateChanged(evt);
            }
        });

        jSpinnerCardSkill7.setValue(1);
        jSpinnerCardSkill7.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCardSkill7StateChanged(evt);
            }
        });

        jSpinnerCardSkill8.setValue(1);
        jSpinnerCardSkill8.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCardSkill8StateChanged(evt);
            }
        });

        jSpinnerCardSkill9.setValue(1);
        jSpinnerCardSkill9.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCardSkill9StateChanged(evt);
            }
        });

        jLabelSIS.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelSIS.setText("SIS Configuration");

        jLabelCardID.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelCardID.setText("Card ID");

        jComboBoxSIS1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));

        jComboBoxSIS2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        jComboBoxSIS2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSIS2ActionPerformed(evt);
            }
        });

        jComboBoxSIS3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));

        jComboBoxSIS4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));

        jComboBoxSIS6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));

        jComboBoxSIS7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));

        jComboBoxSIS8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));

        jComboBoxSIS9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));

        jLabelCenterSkill.setText("Center Skill");

        jComboBoxCenterSkill.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0%", "3%", "6%", "7%", "9%", "12%" }));
        jComboBoxCenterSkill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCenterSkillActionPerformed(evt);
            }
        });

        jLabelAttribute.setText("Attribute");

        jComboBoxAttribute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Smile", "Pure", "Cool" }));
        jComboBoxAttribute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAttributeActionPerformed(evt);
            }
        });

        jLabelSubSkill.setText("Sub Skill");

        jComboBoxSubSkill.setMaximumRowCount(20);
        jComboBoxSubSkill.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3% μ's", "3% Aqours", "6% First-Year", "6% Second-Year", "6% Third-Year", "6% CYaRon!", "6% AZALEA", "6% Guilty Kiss" }));

        jLabelSongType.setText("Song");

        jComboBoxSongType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "μ's", "Aqours" }));

        jLabelNoteCount.setText("Notes");

        jSpinnerNoteCount.setValue(50);
        jSpinnerNoteCount.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerNoteCountStateChanged(evt);
            }
        });

        jLabelTime.setText("Time (s)");

        jSpinnerTime.setValue(120);
        jSpinnerTime.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerTimeStateChanged(evt);
            }
        });

        jLabelStep2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelStep2.setText("Step 2:");

        jButtonCalculate.setText("Calculate");
        jButtonCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCalculateActionPerformed(evt);
            }
        });

        buttonGroupCalculate.add(jRadioButtonAverage);
        jRadioButtonAverage.setSelected(true);
        jRadioButtonAverage.setText("Average");
        jRadioButtonAverage.setToolTipText("");

        buttonGroupCalculate.add(jRadioButtonAbsolute);
        jRadioButtonAbsolute.setText("Absolute");

        jComboBoxSIS5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));

        jLabelBasedOn.setText("Based On");

        jComboBoxBasedOn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Smile", "Pure", "Cool" }));
        jComboBoxBasedOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBasedOnActionPerformed(evt);
            }
        });

        jCheckBoxMatchingFriendCenter.setText("Matching Friend Center");

        jLabelStarNotes.setText("Star Notes");

        jSpinnerStarNotes.setValue(50);
        jSpinnerStarNotes.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerStarNotesStateChanged(evt);
            }
        });

        jCheckBoxNormalizeSong.setText("Normalize Song");

        jCheckBoxAllIdolized.setText("All Idolized");
        jCheckBoxAllIdolized.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxAllIdolizedStateChanged(evt);
            }
        });

        jLabelPerfect.setText("Perfect %");

        jSpinnerPerfect.setValue(50);
        jSpinnerPerfect.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerPerfectStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabelCardID)
                        .addGap(80, 80, 80)
                        .addComponent(jLabelCardSkill))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelStep1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonGetCardData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelSuccess, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCard1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSpinnerCardID1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxIdolized1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCard2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSpinnerCardID2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxIdolized2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCard3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSpinnerCardID3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxIdolized3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCard4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSpinnerCardID4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxIdolized4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCard5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSpinnerCardID5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxIdolized5))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCard6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSpinnerCardID6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxIdolized6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCard7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSpinnerCardID7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxIdolized7))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCard8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSpinnerCardID8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jCheckBoxIdolized8))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelCard9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCheckBoxAllIdolized)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jSpinnerCardID9, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jCheckBoxIdolized9)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSpinnerCardSkill1)
                                    .addComponent(jSpinnerCardSkill2)
                                    .addComponent(jSpinnerCardSkill3)
                                    .addComponent(jSpinnerCardSkill4)
                                    .addComponent(jSpinnerCardSkill5)
                                    .addComponent(jSpinnerCardSkill6)
                                    .addComponent(jSpinnerCardSkill7)
                                    .addComponent(jSpinnerCardSkill8)
                                    .addComponent(jSpinnerCardSkill9))))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSIS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jComboBoxSIS5, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxSIS4, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxSIS3, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxSIS2, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxSIS1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxSIS6, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxSIS7, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxSIS8, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxSIS9, javax.swing.GroupLayout.Alignment.LEADING, 0, 100, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jRadioButtonAverage)
                                                .addGap(3, 3, 3)
                                                .addComponent(jRadioButtonAbsolute))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabelCenterSkill)
                                                        .addGap(18, 18, 18))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabelSubSkill)
                                                        .addGap(33, 33, 33)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jComboBoxSubSkill, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jComboBoxCenterSkill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(jLabelBasedOn)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jComboBoxBasedOn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabelStep2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButtonCalculate)))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabelAttribute)
                                                    .addComponent(jLabelNoteCount))
                                                .addGap(16, 16, 16)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jComboBoxAttribute, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jSpinnerNoteCount, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabelPerfect)
                                                .addGap(22, 22, 22)
                                                .addComponent(jSpinnerPerfect)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabelStarNotes)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jSpinnerStarNotes))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabelTime)
                                                    .addGap(23, 23, 23)
                                                    .addComponent(jSpinnerTime))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabelSongType)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(jComboBoxSongType, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addGap(187, 187, 187))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jCheckBoxMatchingFriendCenter, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                                    .addComponent(jCheckBoxNormalizeSong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCardID)
                    .addComponent(jLabelCardSkill)
                    .addComponent(jLabelSIS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCard1)
                    .addComponent(jSpinnerCardID1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized1)
                    .addComponent(jSpinnerCardSkill1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSIS1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAttribute)
                    .addComponent(jComboBoxAttribute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSongType)
                    .addComponent(jComboBoxSongType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCard2)
                    .addComponent(jSpinnerCardID2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized2)
                    .addComponent(jSpinnerCardSkill2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSIS2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNoteCount)
                    .addComponent(jSpinnerNoteCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelStarNotes)
                    .addComponent(jSpinnerStarNotes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCard3)
                    .addComponent(jSpinnerCardID3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized3)
                    .addComponent(jSpinnerCardSkill3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSIS3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTime)
                    .addComponent(jSpinnerTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPerfect)
                    .addComponent(jSpinnerPerfect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCard4)
                    .addComponent(jSpinnerCardID4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized4)
                    .addComponent(jSpinnerCardSkill4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSIS4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCard5)
                    .addComponent(jSpinnerCardID5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized5)
                    .addComponent(jSpinnerCardSkill5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSIS5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCenterSkill)
                    .addComponent(jComboBoxCenterSkill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBasedOn)
                    .addComponent(jComboBoxBasedOn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCard6)
                    .addComponent(jSpinnerCardID6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized6)
                    .addComponent(jSpinnerCardSkill6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSIS6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSubSkill)
                    .addComponent(jComboBoxSubSkill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCard7)
                    .addComponent(jSpinnerCardID7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized7)
                    .addComponent(jSpinnerCardSkill7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSIS7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxMatchingFriendCenter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCard8)
                    .addComponent(jSpinnerCardID8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized8)
                    .addComponent(jSpinnerCardSkill8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSIS8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxNormalizeSong))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCard9)
                    .addComponent(jSpinnerCardID9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized9)
                    .addComponent(jSpinnerCardSkill9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSIS9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonAverage)
                    .addComponent(jRadioButtonAbsolute))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxAllIdolized)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGetCardData)
                    .addComponent(jLabelStep1)
                    .addComponent(jLabelStep2)
                    .addComponent(jButtonCalculate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelSuccess)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jLabelSuccess.setVisible(false);
        jLabelCardSkill.setVisible(false);
        jSpinnerCardSkill1.setVisible(false);
        jSpinnerCardSkill2.setVisible(false);
        jSpinnerCardSkill3.setVisible(false);
        jSpinnerCardSkill4.setVisible(false);
        jSpinnerCardSkill5.setVisible(false);
        jSpinnerCardSkill6.setVisible(false);
        jSpinnerCardSkill7.setVisible(false);
        jSpinnerCardSkill8.setVisible(false);
        jSpinnerCardSkill9.setVisible(false);
        jLabelSIS.setVisible(false);
        jComboBoxSIS1.setVisible(false);
        jComboBoxSIS2.setVisible(false);
        jComboBoxSIS3.setVisible(false);
        jComboBoxSIS4.setVisible(false);
        jComboBoxSIS6.setVisible(false);
        jComboBoxSIS7.setVisible(false);
        jComboBoxSIS8.setVisible(false);
        jComboBoxSIS9.setVisible(false);
        jLabelCenterSkill.setVisible(false);
        jComboBoxCenterSkill.setVisible(false);
        jLabelAttribute.setVisible(false);
        jComboBoxAttribute.setVisible(false);
        jLabelSubSkill.setVisible(false);
        jComboBoxSubSkill.setVisible(false);
        jLabelSongType.setVisible(false);
        jComboBoxSongType.setVisible(false);
        jLabelNoteCount.setVisible(false);
        jSpinnerNoteCount.setVisible(false);
        jLabelTime.setVisible(false);
        jSpinnerTime.setVisible(false);
        jLabelStep2.setVisible(false);
        jButtonCalculate.setVisible(false);
        jRadioButtonAverage.setVisible(false);
        jRadioButtonAbsolute.setVisible(false);
        jComboBoxSIS5.setVisible(false);
        jLabelBasedOn.setVisible(false);
        jComboBoxBasedOn.setVisible(false);
        jCheckBoxMatchingFriendCenter.setVisible(false);
        jLabelStarNotes.setVisible(false);
        jSpinnerStarNotes.setVisible(false);
        jCheckBoxNormalizeSong.setVisible(false);
        jLabelPerfect.setVisible(false);
        jSpinnerPerfect.setVisible(false);

        setBounds(0, 0, 678, 512);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGetCardDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGetCardDataActionPerformed
        // TODO add your handling code here:
        
        userInput = new UserInput();
        
        setCardID(userInput);
        setIdolized(userInput);
        
        // Check for valid card ID
        try {
            if (!isValidID(userInput)) {
                jLabelSuccess.setText("Error: Invalid Card ID");
                jLabelSuccess.setVisible(true);
                return;
            }
        } catch (IOException e) {
        }
        

        int[] cardIDs = { Integer.parseInt(userInput.getCard1ID()), Integer.parseInt(userInput.getCard2ID()), Integer.parseInt(userInput.getCard3ID()),
                          Integer.parseInt(userInput.getCard4ID()), Integer.parseInt(userInput.getCard5ID()), Integer.parseInt(userInput.getCard6ID()),
                          Integer.parseInt(userInput.getCard7ID()), Integer.parseInt(userInput.getCard8ID()), Integer.parseInt(userInput.getCard9ID()),
                        }; 
        
        GetCardJSON cardJSON = new GetCardJSON();
        
        try {
            createCards(cardIDs, cardJSON, userInput);
        } catch (IOException e) {
        }
        
        try {
            generateSkillTables(cardIDs);
            
            addSkillTables();
            
            addSIS();
            
            addStarNotes(cardIDs);
           
            addCenterSkill();
            
            addTheRest();
            
            System.out.println("Part 1 Done.");
            
	} catch (IOException e) {
	}
        
         jLabelSuccess.setText("Data successfully obtained!");
         jLabelSuccess.setVisible(true);
        
    }//GEN-LAST:event_jButtonGetCardDataActionPerformed

    private void generateSIS(int cardNo) {
        
        boolean idolized;
        
        if (cardNo == 1) {
            
            idolized = jCheckBoxIdolized1.isSelected();
            
            if (card1.getRarity().equals("N")) {
                    jComboBoxSIS1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
            }
            
            else if (card1.getRarity().equals("R")) {
                
                if (card1.isSpecial()) {
                    jComboBoxSIS1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
                
                else {
                    jComboBoxSIS1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
            }
            
            else if (card1.getRarity().equals("SR")) {
                
                if (card1.isSpecial()) {
                    jComboBoxSIS1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri" }));
                }
                
                else {
                    jComboBoxSIS1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
            }
            
            else if (card1.getRarity().equals("SSR")) {
                
                if (card1.isSpecial()) {
                    jComboBoxSIS1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri", 
                                                                                                 "Ki+Ch", "Ki+He", "Ki+Tr", "Ki+Ve", 
                                                                                                 "Pe+Au", "Pe+Cr", "Ri+Au", "Ri+Cr",
                                                                                                 "Ki+Pe+Ri",
                                                                                                 "Pe+Ch", "Pe+He", "Pe+Tr", "Pe+Ve", "Ri+Ch", "Ri+He", "Ri+Tr", "Ri+Ve", "Au+Cr",
                                                                                                 "Ki+Pe+Au", "Ki+Pe+Cr", "Ki+Ri+Au", "Ki+Ri+Cr" }));
                }
                
                else {
                    jComboBoxSIS1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Ki+Pe", "Ki+Ri" }));
                }
            }
            
            else if (card1.getRarity().equals("UR")) {
                
                if (card1.isSpecial()) {
                    jComboBoxSIS1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri", 
                                                                                                 "Ki+Ch", "Ki+He", "Ki+Tr", "Ki+Ve", 
                                                                                                 "Pe+Au", "Pe+Cr", "Ri+Au", "Ri+Cr",
                                                                                                 "Ki+Pe+Ri",
                                                                                                 "Pe+Ch", "Pe+He", "Pe+Tr", "Pe+Ve", "Ri+Ch", "Ri+He", "Ri+Tr", "Ri+Ve", "Au+Cr",
                                                                                                 "Ki+Pe+Au", "Ki+Pe+Cr", "Ki+Ri+Au", "Ki+Ri+Cr",
                                                                                                 "Au+Ch", "Au+He", "Au+Tr", "Au+Ve", "Cr+Ch", "Cr+He", "Cr+Tr", "Cr+Ve",
                                                                                                 "Ki+Pe+Ch", "Ki+Pe+He", "Ki+Pe+Tr", "Ki+Pe+Ve", "Ki+Ri+Ch", "Ki+Ri+He", "Ki+Ri+Tr", "Ki+Ri+Ve", 
                                                                                                 "Ch+Tr", "Ch+Ve", "He+Tr", "He+Ve", "Tr+Ve", 
                                                                                                 "Ki+Au+Ch", "Ki+Au+He", "Ki+Au+Tr", "Ki+Au+Ve", "Ki+Cr+Ch", "Ki+Cr+He", "Ki+Cr+Tr", "Ki+Cr+Ve",
                                                                                                 "Pe+Ri+Ch", "Pe+Ri+He", "Pe+Ri+Tr", "Pe+Ri+Ve", 
                                                                                                 "Pe+Au+Cr", "Ri+Au+Cr",
                                                                                                 "Ki+Pe+Ri+Au", "Ki+Pe+Ri+Cr" }));
                }
                
                else {
                    jComboBoxSIS1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri" }));
                }
            }
            
        }
        
        else if (cardNo == 2) {
            idolized = jCheckBoxIdolized2.isSelected();
            
            if (card2.getRarity().equals("N")) {
                    jComboBoxSIS2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
            }
            
            else if (card2.getRarity().equals("R")) {
                
                if (card2.isSpecial()) {
                    jComboBoxSIS2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
                
                else {
                    jComboBoxSIS2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
            }
            
            else if (card2.getRarity().equals("SR")) {
                
                if (card2.isSpecial()) {
                    jComboBoxSIS2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri" }));
                }
                
                else {
                    jComboBoxSIS2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
            }
            
            else if (card2.getRarity().equals("SSR")) {
                
                if (card2.isSpecial()) {
                    jComboBoxSIS2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri", 
                                                                                                 "Ki+Ch", "Ki+He", "Ki+Tr", "Ki+Ve", 
                                                                                                 "Pe+Au", "Pe+Cr", "Ri+Au", "Ri+Cr",
                                                                                                 "Ki+Pe+Ri",
                                                                                                 "Pe+Ch", "Pe+He", "Pe+Tr", "Pe+Ve", "Ri+Ch", "Ri+He", "Ri+Tr", "Ri+Ve", "Au+Cr",
                                                                                                 "Ki+Pe+Au", "Ki+Pe+Cr", "Ki+Ri+Au", "Ki+Ri+Cr" }));
                }
                
                else {
                    jComboBoxSIS2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Ki+Pe", "Ki+Ri" }));
                }
            }
            
            else if (card2.getRarity().equals("UR")) {
                
                if (card2.isSpecial()) {
                    jComboBoxSIS2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri", 
                                                                                                 "Ki+Ch", "Ki+He", "Ki+Tr", "Ki+Ve", 
                                                                                                 "Pe+Au", "Pe+Cr", "Ri+Au", "Ri+Cr",
                                                                                                 "Ki+Pe+Ri",
                                                                                                 "Pe+Ch", "Pe+He", "Pe+Tr", "Pe+Ve", "Ri+Ch", "Ri+He", "Ri+Tr", "Ri+Ve", "Au+Cr",
                                                                                                 "Ki+Pe+Au", "Ki+Pe+Cr", "Ki+Ri+Au", "Ki+Ri+Cr",
                                                                                                 "Au+Ch", "Au+He", "Au+Tr", "Au+Ve", "Cr+Ch", "Cr+He", "Cr+Tr", "Cr+Ve",
                                                                                                 "Ki+Pe+Ch", "Ki+Pe+He", "Ki+Pe+Tr", "Ki+Pe+Ve", "Ki+Ri+Ch", "Ki+Ri+He", "Ki+Ri+Tr", "Ki+Ri+Ve", 
                                                                                                 "Ch+Tr", "Ch+Ve", "He+Tr", "He+Ve", "Tr+Ve", 
                                                                                                 "Ki+Au+Ch", "Ki+Au+He", "Ki+Au+Tr", "Ki+Au+Ve", "Ki+Cr+Ch", "Ki+Cr+He", "Ki+Cr+Tr", "Ki+Cr+Ve",
                                                                                                 "Pe+Ri+Ch", "Pe+Ri+He", "Pe+Ri+Tr", "Pe+Ri+Ve", 
                                                                                                 "Pe+Au+Cr", "Ri+Au+Cr",
                                                                                                 "Ki+Pe+Ri+Au", "Ki+Pe+Ri+Cr" }));
                }
                
                else {
                    jComboBoxSIS2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri" }));
                }
            }
        }
        
        else if (cardNo == 3) {
            idolized = jCheckBoxIdolized3.isSelected();
            
            if (card3.getRarity().equals("N")) {
                    jComboBoxSIS3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
            }
            
            else if (card3.getRarity().equals("R")) {
                
                if (card3.isSpecial()) {
                    jComboBoxSIS3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
                
                else {
                    jComboBoxSIS3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
            }
            
            else if (card3.getRarity().equals("SR")) {
                
                if (card3.isSpecial()) {
                    jComboBoxSIS3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri" }));
                }
                
                else {
                    jComboBoxSIS3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
            }
            
            else if (card3.getRarity().equals("SSR")) {
                
                if (card3.isSpecial()) {
                    jComboBoxSIS3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri", 
                                                                                                 "Ki+Ch", "Ki+He", "Ki+Tr", "Ki+Ve", 
                                                                                                 "Pe+Au", "Pe+Cr", "Ri+Au", "Ri+Cr",
                                                                                                 "Ki+Pe+Ri",
                                                                                                 "Pe+Ch", "Pe+He", "Pe+Tr", "Pe+Ve", "Ri+Ch", "Ri+He", "Ri+Tr", "Ri+Ve", "Au+Cr",
                                                                                                 "Ki+Pe+Au", "Ki+Pe+Cr", "Ki+Ri+Au", "Ki+Ri+Cr" }));
                }
                
                else {
                    jComboBoxSIS3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Ki+Pe", "Ki+Ri" }));
                }
            }
            
            else if (card3.getRarity().equals("UR")) {
                
                if (card3.isSpecial()) {
                    jComboBoxSIS3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri", 
                                                                                                 "Ki+Ch", "Ki+He", "Ki+Tr", "Ki+Ve", 
                                                                                                 "Pe+Au", "Pe+Cr", "Ri+Au", "Ri+Cr",
                                                                                                 "Ki+Pe+Ri",
                                                                                                 "Pe+Ch", "Pe+He", "Pe+Tr", "Pe+Ve", "Ri+Ch", "Ri+He", "Ri+Tr", "Ri+Ve", "Au+Cr",
                                                                                                 "Ki+Pe+Au", "Ki+Pe+Cr", "Ki+Ri+Au", "Ki+Ri+Cr",
                                                                                                 "Au+Ch", "Au+He", "Au+Tr", "Au+Ve", "Cr+Ch", "Cr+He", "Cr+Tr", "Cr+Ve",
                                                                                                 "Ki+Pe+Ch", "Ki+Pe+He", "Ki+Pe+Tr", "Ki+Pe+Ve", "Ki+Ri+Ch", "Ki+Ri+He", "Ki+Ri+Tr", "Ki+Ri+Ve", 
                                                                                                 "Ch+Tr", "Ch+Ve", "He+Tr", "He+Ve", "Tr+Ve", 
                                                                                                 "Ki+Au+Ch", "Ki+Au+He", "Ki+Au+Tr", "Ki+Au+Ve", "Ki+Cr+Ch", "Ki+Cr+He", "Ki+Cr+Tr", "Ki+Cr+Ve",
                                                                                                 "Pe+Ri+Ch", "Pe+Ri+He", "Pe+Ri+Tr", "Pe+Ri+Ve", 
                                                                                                 "Pe+Au+Cr", "Ri+Au+Cr",
                                                                                                 "Ki+Pe+Ri+Au", "Ki+Pe+Ri+Cr" }));
                }
                
                else {
                    jComboBoxSIS3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri" }));
                }
            }
        }
        
        else if (cardNo == 4) {
            idolized = jCheckBoxIdolized4.isSelected();
            
            if (card4.getRarity().equals("N")) {
                    jComboBoxSIS4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
            }
            
            else if (card4.getRarity().equals("R")) {
                
                if (card4.isSpecial()) {
                    jComboBoxSIS4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
                
                else {
                    jComboBoxSIS4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
            }
            
            else if (card4.getRarity().equals("SR")) {
                
                if (card4.isSpecial()) {
                    jComboBoxSIS4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri" }));
                }
                
                else {
                    jComboBoxSIS4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
            }
            
            else if (card4.getRarity().equals("SSR")) {
                
                if (card4.isSpecial()) {
                    jComboBoxSIS4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri", 
                                                                                                 "Ki+Ch", "Ki+He", "Ki+Tr", "Ki+Ve", 
                                                                                                 "Pe+Au", "Pe+Cr", "Ri+Au", "Ri+Cr",
                                                                                                 "Ki+Pe+Ri",
                                                                                                 "Pe+Ch", "Pe+He", "Pe+Tr", "Pe+Ve", "Ri+Ch", "Ri+He", "Ri+Tr", "Ri+Ve", "Au+Cr",
                                                                                                 "Ki+Pe+Au", "Ki+Pe+Cr", "Ki+Ri+Au", "Ki+Ri+Cr" }));
                }
                
                else {
                    jComboBoxSIS4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Ki+Pe", "Ki+Ri" }));
                }
            }
            
            else if (card4.getRarity().equals("UR")) {
                
                if (card4.isSpecial()) {
                    jComboBoxSIS4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri", 
                                                                                                 "Ki+Ch", "Ki+He", "Ki+Tr", "Ki+Ve", 
                                                                                                 "Pe+Au", "Pe+Cr", "Ri+Au", "Ri+Cr",
                                                                                                 "Ki+Pe+Ri",
                                                                                                 "Pe+Ch", "Pe+He", "Pe+Tr", "Pe+Ve", "Ri+Ch", "Ri+He", "Ri+Tr", "Ri+Ve", "Au+Cr",
                                                                                                 "Ki+Pe+Au", "Ki+Pe+Cr", "Ki+Ri+Au", "Ki+Ri+Cr",
                                                                                                 "Au+Ch", "Au+He", "Au+Tr", "Au+Ve", "Cr+Ch", "Cr+He", "Cr+Tr", "Cr+Ve",
                                                                                                 "Ki+Pe+Ch", "Ki+Pe+He", "Ki+Pe+Tr", "Ki+Pe+Ve", "Ki+Ri+Ch", "Ki+Ri+He", "Ki+Ri+Tr", "Ki+Ri+Ve", 
                                                                                                 "Ch+Tr", "Ch+Ve", "He+Tr", "He+Ve", "Tr+Ve", 
                                                                                                 "Ki+Au+Ch", "Ki+Au+He", "Ki+Au+Tr", "Ki+Au+Ve", "Ki+Cr+Ch", "Ki+Cr+He", "Ki+Cr+Tr", "Ki+Cr+Ve",
                                                                                                 "Pe+Ri+Ch", "Pe+Ri+He", "Pe+Ri+Tr", "Pe+Ri+Ve", 
                                                                                                 "Pe+Au+Cr", "Ri+Au+Cr",
                                                                                                 "Ki+Pe+Ri+Au", "Ki+Pe+Ri+Cr" }));
                }
                
                else {
                    jComboBoxSIS4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri" }));
                }
            }
        }
        
        else if (cardNo == 5) {
            idolized = jCheckBoxIdolized5.isSelected();
            
            if (card5.getRarity().equals("N")) {
                    jComboBoxSIS5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
            }
            
            else if (card5.getRarity().equals("R")) {
                
                if (card5.isSpecial()) {
                    jComboBoxSIS5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
                
                else {
                    jComboBoxSIS5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
            }
            
            else if (card5.getRarity().equals("SR")) {
                
                if (card5.isSpecial()) {
                    jComboBoxSIS5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri" }));
                }
                
                else {
                    jComboBoxSIS5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
            }
            
            else if (card5.getRarity().equals("SSR")) {
                
                if (card5.isSpecial()) {
                    jComboBoxSIS5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri", 
                                                                                                 "Ki+Ch", "Ki+He", "Ki+Tr", "Ki+Ve", 
                                                                                                 "Pe+Au", "Pe+Cr", "Ri+Au", "Ri+Cr",
                                                                                                 "Ki+Pe+Ri",
                                                                                                 "Pe+Ch", "Pe+He", "Pe+Tr", "Pe+Ve", "Ri+Ch", "Ri+He", "Ri+Tr", "Ri+Ve", "Au+Cr",
                                                                                                 "Ki+Pe+Au", "Ki+Pe+Cr", "Ki+Ri+Au", "Ki+Ri+Cr" }));
                }
                
                else {
                    jComboBoxSIS5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Ki+Pe", "Ki+Ri" }));
                }
            }
            
            else if (card5.getRarity().equals("UR")) {
                
                if (card5.isSpecial()) {
                    jComboBoxSIS5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri", 
                                                                                                 "Ki+Ch", "Ki+He", "Ki+Tr", "Ki+Ve", 
                                                                                                 "Pe+Au", "Pe+Cr", "Ri+Au", "Ri+Cr",
                                                                                                 "Ki+Pe+Ri",
                                                                                                 "Pe+Ch", "Pe+He", "Pe+Tr", "Pe+Ve", "Ri+Ch", "Ri+He", "Ri+Tr", "Ri+Ve", "Au+Cr",
                                                                                                 "Ki+Pe+Au", "Ki+Pe+Cr", "Ki+Ri+Au", "Ki+Ri+Cr",
                                                                                                 "Au+Ch", "Au+He", "Au+Tr", "Au+Ve", "Cr+Ch", "Cr+He", "Cr+Tr", "Cr+Ve",
                                                                                                 "Ki+Pe+Ch", "Ki+Pe+He", "Ki+Pe+Tr", "Ki+Pe+Ve", "Ki+Ri+Ch", "Ki+Ri+He", "Ki+Ri+Tr", "Ki+Ri+Ve", 
                                                                                                 "Ch+Tr", "Ch+Ve", "He+Tr", "He+Ve", "Tr+Ve", 
                                                                                                 "Ki+Au+Ch", "Ki+Au+He", "Ki+Au+Tr", "Ki+Au+Ve", "Ki+Cr+Ch", "Ki+Cr+He", "Ki+Cr+Tr", "Ki+Cr+Ve",
                                                                                                 "Pe+Ri+Ch", "Pe+Ri+He", "Pe+Ri+Tr", "Pe+Ri+Ve", 
                                                                                                 "Pe+Au+Cr", "Ri+Au+Cr",
                                                                                                 "Ki+Pe+Ri+Au", "Ki+Pe+Ri+Cr" }));
                }
                
                else {
                    jComboBoxSIS5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri" }));
                }
            }
        }
        
        else if (cardNo == 6) {
            idolized = jCheckBoxIdolized6.isSelected();
            
            if (card6.getRarity().equals("N")) {
                    jComboBoxSIS6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
            }
            
            else if (card6.getRarity().equals("R")) {
                
                if (card6.isSpecial()) {
                    jComboBoxSIS6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
                
                else {
                    jComboBoxSIS6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
            }
            
            else if (card6.getRarity().equals("SR")) {
                
                if (card6.isSpecial()) {
                    jComboBoxSIS6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri" }));
                }
                
                else {
                    jComboBoxSIS6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
            }
            
            else if (card6.getRarity().equals("SSR")) {
                
                if (card6.isSpecial()) {
                    jComboBoxSIS6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri", 
                                                                                                 "Ki+Ch", "Ki+He", "Ki+Tr", "Ki+Ve", 
                                                                                                 "Pe+Au", "Pe+Cr", "Ri+Au", "Ri+Cr",
                                                                                                 "Ki+Pe+Ri",
                                                                                                 "Pe+Ch", "Pe+He", "Pe+Tr", "Pe+Ve", "Ri+Ch", "Ri+He", "Ri+Tr", "Ri+Ve", "Au+Cr",
                                                                                                 "Ki+Pe+Au", "Ki+Pe+Cr", "Ki+Ri+Au", "Ki+Ri+Cr" }));
                }
                
                else {
                    jComboBoxSIS6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Ki+Pe", "Ki+Ri" }));
                }
            }
            
            else if (card6.getRarity().equals("UR")) {
                
                if (card6.isSpecial()) {
                    jComboBoxSIS6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri", 
                                                                                                 "Ki+Ch", "Ki+He", "Ki+Tr", "Ki+Ve", 
                                                                                                 "Pe+Au", "Pe+Cr", "Ri+Au", "Ri+Cr",
                                                                                                 "Ki+Pe+Ri",
                                                                                                 "Pe+Ch", "Pe+He", "Pe+Tr", "Pe+Ve", "Ri+Ch", "Ri+He", "Ri+Tr", "Ri+Ve", "Au+Cr",
                                                                                                 "Ki+Pe+Au", "Ki+Pe+Cr", "Ki+Ri+Au", "Ki+Ri+Cr",
                                                                                                 "Au+Ch", "Au+He", "Au+Tr", "Au+Ve", "Cr+Ch", "Cr+He", "Cr+Tr", "Cr+Ve",
                                                                                                 "Ki+Pe+Ch", "Ki+Pe+He", "Ki+Pe+Tr", "Ki+Pe+Ve", "Ki+Ri+Ch", "Ki+Ri+He", "Ki+Ri+Tr", "Ki+Ri+Ve", 
                                                                                                 "Ch+Tr", "Ch+Ve", "He+Tr", "He+Ve", "Tr+Ve", 
                                                                                                 "Ki+Au+Ch", "Ki+Au+He", "Ki+Au+Tr", "Ki+Au+Ve", "Ki+Cr+Ch", "Ki+Cr+He", "Ki+Cr+Tr", "Ki+Cr+Ve",
                                                                                                 "Pe+Ri+Ch", "Pe+Ri+He", "Pe+Ri+Tr", "Pe+Ri+Ve", 
                                                                                                 "Pe+Au+Cr", "Ri+Au+Cr",
                                                                                                 "Ki+Pe+Ri+Au", "Ki+Pe+Ri+Cr" }));
                }
                
                else {
                    jComboBoxSIS6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri" }));
                }
            }
        }
        
        else if (cardNo == 7) {
            idolized = jCheckBoxIdolized7.isSelected();

            if (card7.getRarity().equals("N")) {
                    jComboBoxSIS7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
            }
            
            else if (card7.getRarity().equals("R")) {
                
                if (card7.isSpecial()) {
                    jComboBoxSIS7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
                
                else {
                    jComboBoxSIS7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
            }
            
            else if (card7.getRarity().equals("SR")) {
                
                if (card7.isSpecial()) {
                    jComboBoxSIS7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri" }));
                }
                
                else {
                    jComboBoxSIS7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
            }
            
            else if (card7.getRarity().equals("SSR")) {
                
                if (card7.isSpecial()) {
                    jComboBoxSIS7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri", 
                                                                                                 "Ki+Ch", "Ki+He", "Ki+Tr", "Ki+Ve", 
                                                                                                 "Pe+Au", "Pe+Cr", "Ri+Au", "Ri+Cr",
                                                                                                 "Ki+Pe+Ri",
                                                                                                 "Pe+Ch", "Pe+He", "Pe+Tr", "Pe+Ve", "Ri+Ch", "Ri+He", "Ri+Tr", "Ri+Ve", "Au+Cr",
                                                                                                 "Ki+Pe+Au", "Ki+Pe+Cr", "Ki+Ri+Au", "Ki+Ri+Cr" }));
                }
                
                else {
                    jComboBoxSIS7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Ki+Pe", "Ki+Ri" }));
                }
            }
            
            else if (card7.getRarity().equals("UR")) {
                
                if (card7.isSpecial()) {
                    jComboBoxSIS7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri", 
                                                                                                 "Ki+Ch", "Ki+He", "Ki+Tr", "Ki+Ve", 
                                                                                                 "Pe+Au", "Pe+Cr", "Ri+Au", "Ri+Cr",
                                                                                                 "Ki+Pe+Ri",
                                                                                                 "Pe+Ch", "Pe+He", "Pe+Tr", "Pe+Ve", "Ri+Ch", "Ri+He", "Ri+Tr", "Ri+Ve", "Au+Cr",
                                                                                                 "Ki+Pe+Au", "Ki+Pe+Cr", "Ki+Ri+Au", "Ki+Ri+Cr",
                                                                                                 "Au+Ch", "Au+He", "Au+Tr", "Au+Ve", "Cr+Ch", "Cr+He", "Cr+Tr", "Cr+Ve",
                                                                                                 "Ki+Pe+Ch", "Ki+Pe+He", "Ki+Pe+Tr", "Ki+Pe+Ve", "Ki+Ri+Ch", "Ki+Ri+He", "Ki+Ri+Tr", "Ki+Ri+Ve", 
                                                                                                 "Ch+Tr", "Ch+Ve", "He+Tr", "He+Ve", "Tr+Ve", 
                                                                                                 "Ki+Au+Ch", "Ki+Au+He", "Ki+Au+Tr", "Ki+Au+Ve", "Ki+Cr+Ch", "Ki+Cr+He", "Ki+Cr+Tr", "Ki+Cr+Ve",
                                                                                                 "Pe+Ri+Ch", "Pe+Ri+He", "Pe+Ri+Tr", "Pe+Ri+Ve", 
                                                                                                 "Pe+Au+Cr", "Ri+Au+Cr",
                                                                                                 "Ki+Pe+Ri+Au", "Ki+Pe+Ri+Cr" }));
                }
                
                else {
                    jComboBoxSIS7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri" }));
                }
            }
        }
        
        else if (cardNo == 8) {
            idolized = jCheckBoxIdolized8.isSelected();

            if (card8.getRarity().equals("N")) {
                    jComboBoxSIS8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
            }
            
            else if (card8.getRarity().equals("R")) {
                
                if (card8.isSpecial()) {
                    jComboBoxSIS8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
                
                else {
                    jComboBoxSIS8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
            }
            
            else if (card8.getRarity().equals("SR")) {
                
                if (card8.isSpecial()) {
                    jComboBoxSIS8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri" }));
                }
                
                else {
                    jComboBoxSIS8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
            }
            
            else if (card8.getRarity().equals("SSR")) {
                
                if (card8.isSpecial()) {
                    jComboBoxSIS8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri", 
                                                                                                 "Ki+Ch", "Ki+He", "Ki+Tr", "Ki+Ve", 
                                                                                                 "Pe+Au", "Pe+Cr", "Ri+Au", "Ri+Cr",
                                                                                                 "Ki+Pe+Ri",
                                                                                                 "Pe+Ch", "Pe+He", "Pe+Tr", "Pe+Ve", "Ri+Ch", "Ri+He", "Ri+Tr", "Ri+Ve", "Au+Cr",
                                                                                                 "Ki+Pe+Au", "Ki+Pe+Cr", "Ki+Ri+Au", "Ki+Ri+Cr" }));
                }
                
                else {
                    jComboBoxSIS8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Ki+Pe", "Ki+Ri" }));
                }
            }
            
            else if (card8.getRarity().equals("UR")) {
                
                if (card8.isSpecial()) {
                    jComboBoxSIS8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri", 
                                                                                                 "Ki+Ch", "Ki+He", "Ki+Tr", "Ki+Ve", 
                                                                                                 "Pe+Au", "Pe+Cr", "Ri+Au", "Ri+Cr",
                                                                                                 "Ki+Pe+Ri",
                                                                                                 "Pe+Ch", "Pe+He", "Pe+Tr", "Pe+Ve", "Ri+Ch", "Ri+He", "Ri+Tr", "Ri+Ve", "Au+Cr",
                                                                                                 "Ki+Pe+Au", "Ki+Pe+Cr", "Ki+Ri+Au", "Ki+Ri+Cr",
                                                                                                 "Au+Ch", "Au+He", "Au+Tr", "Au+Ve", "Cr+Ch", "Cr+He", "Cr+Tr", "Cr+Ve",
                                                                                                 "Ki+Pe+Ch", "Ki+Pe+He", "Ki+Pe+Tr", "Ki+Pe+Ve", "Ki+Ri+Ch", "Ki+Ri+He", "Ki+Ri+Tr", "Ki+Ri+Ve", 
                                                                                                 "Ch+Tr", "Ch+Ve", "He+Tr", "He+Ve", "Tr+Ve", 
                                                                                                 "Ki+Au+Ch", "Ki+Au+He", "Ki+Au+Tr", "Ki+Au+Ve", "Ki+Cr+Ch", "Ki+Cr+He", "Ki+Cr+Tr", "Ki+Cr+Ve",
                                                                                                 "Pe+Ri+Ch", "Pe+Ri+He", "Pe+Ri+Tr", "Pe+Ri+Ve", 
                                                                                                 "Pe+Au+Cr", "Ri+Au+Cr",
                                                                                                 "Ki+Pe+Ri+Au", "Ki+Pe+Ri+Cr" }));
                }
                
                else {
                    jComboBoxSIS8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri" }));
                }
            }
        }
        
        else {
            idolized = jCheckBoxIdolized9.isSelected();
            
            if (card9.getRarity().equals("N")) {
                    jComboBoxSIS9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
            }
            
            else if (card9.getRarity().equals("R")) {
                
                if (card9.isSpecial()) {
                    jComboBoxSIS9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
                
                else {
                    jComboBoxSIS9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
            }
            
            else if (card9.getRarity().equals("SR")) {
                
                if (card9.isSpecial()) {
                    jComboBoxSIS9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri" }));
                }
                
                else {
                    jComboBoxSIS9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
            }
            
            else if (card9.getRarity().equals("SSR")) {
                
                if (card9.isSpecial()) {
                    jComboBoxSIS9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri", 
                                                                                                 "Ki+Ch", "Ki+He", "Ki+Tr", "Ki+Ve", 
                                                                                                 "Pe+Au", "Pe+Cr", "Ri+Au", "Ri+Cr",
                                                                                                 "Ki+Pe+Ri",
                                                                                                 "Pe+Ch", "Pe+He", "Pe+Tr", "Pe+Ve", "Ri+Ch", "Ri+He", "Ri+Tr", "Ri+Ve", "Au+Cr",
                                                                                                 "Ki+Pe+Au", "Ki+Pe+Cr", "Ki+Ri+Au", "Ki+Ri+Cr" }));
                }
                
                else {
                    jComboBoxSIS9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Ki+Pe", "Ki+Ri" }));
                }
            }
            
            else if (card9.getRarity().equals("UR")) {
                
                if (card9.isSpecial()) {
                    jComboBoxSIS9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring" }));
                }
                
                else if (idolized) {
                    jComboBoxSIS9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri", 
                                                                                                 "Ki+Ch", "Ki+He", "Ki+Tr", "Ki+Ve", 
                                                                                                 "Pe+Au", "Pe+Cr", "Ri+Au", "Ri+Cr",
                                                                                                 "Ki+Pe+Ri",
                                                                                                 "Pe+Ch", "Pe+He", "Pe+Tr", "Pe+Ve", "Ri+Ch", "Ri+He", "Ri+Tr", "Ri+Ve", "Au+Cr",
                                                                                                 "Ki+Pe+Au", "Ki+Pe+Cr", "Ki+Ri+Au", "Ki+Ri+Cr",
                                                                                                 "Au+Ch", "Au+He", "Au+Tr", "Au+Ve", "Cr+Ch", "Cr+He", "Cr+Tr", "Cr+Ve",
                                                                                                 "Ki+Pe+Ch", "Ki+Pe+He", "Ki+Pe+Tr", "Ki+Pe+Ve", "Ki+Ri+Ch", "Ki+Ri+He", "Ki+Ri+Tr", "Ki+Ri+Ve", 
                                                                                                 "Ch+Tr", "Ch+Ve", "He+Tr", "He+Ve", "Tr+Ve", 
                                                                                                 "Ki+Au+Ch", "Ki+Au+He", "Ki+Au+Tr", "Ki+Au+Ve", "Ki+Cr+Ch", "Ki+Cr+He", "Ki+Cr+Tr", "Ki+Cr+Ve",
                                                                                                 "Pe+Ri+Ch", "Pe+Ri+He", "Pe+Ri+Tr", "Pe+Ri+Ve", 
                                                                                                 "Pe+Au+Cr", "Ri+Au+Cr",
                                                                                                 "Ki+Pe+Ri+Au", "Ki+Pe+Ri+Cr" }));
                }
                
                else {
                    jComboBoxSIS9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", 
                                                                                                 "Kiss", 
                                                                                                 "Perfume", "Ring", 
                                                                                                 "Aura", "Cross", 
                                                                                                 "Charm", "Heal", "Trick", "Veil",
                                                                                                 "Ki+Pe", "Ki+Ri",
                                                                                                 "Ki+Au", "Ki+Cr", "Pe+Ri" }));
                }
            }
        }
        
    }
    
    private void addStarNotes(int[] cardIDs) {
        if (cardIDs[0] == 206 ||
            cardIDs[1] == 206 ||
            cardIDs[2] == 206 ||
            cardIDs[3] == 206 ||
            cardIDs[4] == 206 ||
            cardIDs[5] == 206 ||
            cardIDs[6] == 206 ||
            cardIDs[7] == 206 ||
            cardIDs[8] == 206) {
            jLabelStarNotes.setVisible(true);
            jSpinnerStarNotes.setVisible(true);
        }
        
    }
    
    private void addTheRest() {
        jLabelAttribute.setVisible(true);
        jComboBoxAttribute.setVisible(true);
        
        jLabelSongType.setVisible(true);
        jComboBoxSongType.setVisible(true);
        
        jLabelNoteCount.setVisible(true);
        jSpinnerNoteCount.setVisible(true);
        
        jLabelTime.setVisible(true);
        jSpinnerTime.setVisible(true);
        
        jLabelPerfect.setVisible(true);
        jSpinnerPerfect.setVisible(true);
        
        jRadioButtonAverage.setVisible(true);
        jRadioButtonAbsolute.setVisible(true);
        
        jLabelStep2.setVisible(true);
        jButtonCalculate.setVisible(true);
        
        jCheckBoxMatchingFriendCenter.setVisible(true);
        jCheckBoxNormalizeSong.setVisible(true);
    }

    private void addCenterSkill() {
        jLabelCenterSkill.setVisible(true);
        jComboBoxCenterSkill.setVisible(true);
        
        if (jComboBoxCenterSkill.getSelectedItem().toString().contains("7%") ||
            jComboBoxCenterSkill.getSelectedItem().toString().contains("9%") ||
            jComboBoxCenterSkill.getSelectedItem().toString().contains("12%")) {
            
            jLabelSubSkill.setVisible(true);
            jComboBoxSubSkill.setVisible(true);
            
            if (jComboBoxCenterSkill.getSelectedItem().toString().contains("12%")) {
                jLabelBasedOn.setVisible(true);
                jComboBoxBasedOn.setVisible(true);
            }
            
        }
        
    }

    private void addSIS() {
        jLabelSIS.setVisible(true);
        jComboBoxSIS1.setVisible(true);
        jComboBoxSIS2.setVisible(true);
        jComboBoxSIS3.setVisible(true);
        jComboBoxSIS4.setVisible(true);
        jComboBoxSIS5.setVisible(true);
        jComboBoxSIS6.setVisible(true);
        jComboBoxSIS7.setVisible(true);
        jComboBoxSIS8.setVisible(true);
        jComboBoxSIS9.setVisible(true);
    }

    private void addSkillTables() {
        boolean allZero = true;
        if (SkillLevelCard1[0][0] != 0) {
            card1.setSkillLevelTable(SkillLevelCard1);
            jSpinnerCardSkill1.setVisible(true);
            allZero = false;
        }
        
        else {
            jSpinnerCardSkill1.setVisible(false);
        }
        
        if (SkillLevelCard2[0][0] != 0) {
            card2.setSkillLevelTable(SkillLevelCard2);
            jSpinnerCardSkill2.setVisible(true);
            allZero = false;
        }
        
        else {
            jSpinnerCardSkill2.setVisible(false);
        }
        
        if (SkillLevelCard3[0][0] != 0) {
            card3.setSkillLevelTable(SkillLevelCard3);
            jSpinnerCardSkill3.setVisible(true);
            allZero = false;
        }
        
        else {
            jSpinnerCardSkill3.setVisible(false);
        }
        
        if (SkillLevelCard4[0][0] != 0) {
            card4.setSkillLevelTable(SkillLevelCard4);
            jSpinnerCardSkill4.setVisible(true);
            allZero = false;
        }
        
        else {
            jSpinnerCardSkill4.setVisible(false);
        }
        
        if (SkillLevelCard5[0][0] != 0) {
            card5.setSkillLevelTable(SkillLevelCard5);
            jSpinnerCardSkill5.setVisible(true);
            allZero = false;
        }
        
        else {
            jSpinnerCardSkill5.setVisible(false);
        }
        
        if (SkillLevelCard6[0][0] != 0) {
            card6.setSkillLevelTable(SkillLevelCard6);
            jSpinnerCardSkill6.setVisible(true);
            allZero = false;
        }
        
        else {
            jSpinnerCardSkill6.setVisible(false);
        }
        
        if (SkillLevelCard7[0][0] != 0) {
            card7.setSkillLevelTable(SkillLevelCard7);
            jSpinnerCardSkill7.setVisible(true);
            allZero = false;
        }
        
        else {
            jSpinnerCardSkill7.setVisible(false);
        }
        
        if (SkillLevelCard8[0][0] != 0) {
            card8.setSkillLevelTable(SkillLevelCard8);
            jSpinnerCardSkill8.setVisible(true);
            allZero = false;
        }
        
        else {
            jSpinnerCardSkill8.setVisible(false);
        }
        
        if (SkillLevelCard9[0][0] != 0) {
            card9.setSkillLevelTable(SkillLevelCard9);
            jSpinnerCardSkill9.setVisible(true);
            allZero = false;
        }
        
        else {
            jSpinnerCardSkill9.setVisible(false);
        }
        
        if (!allZero) {
            jLabelCardSkill.setVisible(true);
        }
        
        else {
            jLabelCardSkill.setVisible(false);
        }

    }

    private void generateSkillTables(int[] cardIDs) throws NumberFormatException, IOException {
        
        SkillLevelCard1[0][0] = 0;
        SkillLevelCard2[0][0] = 0;
        SkillLevelCard3[0][0] = 0;
        SkillLevelCard4[0][0] = 0;
        SkillLevelCard5[0][0] = 0;
        SkillLevelCard6[0][0] = 0;
        SkillLevelCard7[0][0] = 0;
        SkillLevelCard8[0][0] = 0;
        SkillLevelCard9[0][0] = 0;
        
        for (int i = 0; i < 9; i++) {
            if (cardIDs[i] > 0) {
                
                String html = Jsoup.connect("https://sif.kirara.ca/card/" + Integer.toString(cardIDs[i])).get().html();
                
                if (i == 4) {
                    parseCenterSkill(html);
                }
                int indexBegin = html.indexOf("document.precalc");
                int indexEnd = html.indexOf("document.cllite_ids");
              //  System.out.println(html.substring(indexBegin, indexEnd));
                
                html = html.substring(indexBegin, indexEnd);
                indexBegin = html.indexOf("\"skill\"");
                indexEnd = html.indexOf(";");
              //  System.out.println(html.substring(indexBegin, indexEnd));
                
                html = html.substring(indexBegin, indexEnd);
                
                if (html.contains("null")) {
                    
                }
                
                else {
                    String temp;
                    
                    for (int j = 0; j < 8; j++) {
                        
                        if (i == 0 && !card1.isSpecial()) {
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard1[j][0] = Integer.parseInt(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                            
                            indexEnd = html.indexOf(",");
                            if (indexEnd == -1) {
                                indexEnd = html.indexOf("]");
                            }
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            
                            SkillLevelCard1[j][1] = (int) Double.parseDouble(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                        }
                        
                        else if (i == 1 && !card2.isSpecial()) {
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard2[j][0] = Integer.parseInt(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                            
                            indexEnd = html.indexOf(",");
                            if (indexEnd == -1) {
                                indexEnd = html.indexOf("]");
                            }
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard2[j][1] = (int) Double.parseDouble(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                        }
                        
                        else if (i == 2  && !card3.isSpecial()) {
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard3[j][0] = Integer.parseInt(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                            
                            indexEnd = html.indexOf(",");
                            if (indexEnd == -1) {
                                indexEnd = html.indexOf("]");
                            }
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard3[j][1] = (int) Double.parseDouble(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                        }
                        
                        else if (i == 3  && !card4.isSpecial()) {
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard4[j][0] = Integer.parseInt(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                            
                            indexEnd = html.indexOf(",");
                            if (indexEnd == -1) {
                                indexEnd = html.indexOf("]");
                            }
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard4[j][1] = (int) Double.parseDouble(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                        }
                        
                        else if (i == 4  && !card5.isSpecial()) {
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard5[j][0] = Integer.parseInt(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                            
                            indexEnd = html.indexOf(",");
                            if (indexEnd == -1) {
                                indexEnd = html.indexOf("]");
                            }
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard5[j][1] = (int) Double.parseDouble(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                        }
                        
                        else if (i == 5  && !card6.isSpecial()) {
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard6[j][0] = Integer.parseInt(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                            
                            indexEnd = html.indexOf(",");
                            if (indexEnd == -1) {
                                indexEnd = html.indexOf("]");
                            }
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard6[j][1] = (int) Double.parseDouble(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                        }
                        
                        else if (i == 6  && !card7.isSpecial()) {
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard7[j][0] = Integer.parseInt(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                            
                            indexEnd = html.indexOf(",");
                            if (indexEnd == -1) {
                                indexEnd = html.indexOf("]");
                            }
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard7[j][1] = (int) Double.parseDouble(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                        }
                        
                        else if (i == 7  && !card8.isSpecial()) {
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard8[j][0] = Integer.parseInt(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                            
                            indexEnd = html.indexOf(",");
                            if (indexEnd == -1) {
                                indexEnd = html.indexOf("]");
                            }
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard8[j][1] = (int) Double.parseDouble(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                        }
                        
                        else if (i == 8  && !card9.isSpecial()) {
                            
                            indexEnd = html.indexOf(",");
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard9[j][0] = Integer.parseInt(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                            
                            indexEnd = html.indexOf(",");
                            if (indexEnd == -1) {
                                indexEnd = html.indexOf("]");
                            }
                            temp = html.substring(0, indexEnd);
                            temp = temp.replaceAll("[^\\d.]", "");
                            
                            SkillLevelCard9[j][1] = (int) Double.parseDouble(temp);
                            html = html.substring(indexEnd + 1, html.length());
                            
                        }
                        
                    }
                    
                }
                
                
                
            }
            
        }
    }
    
    private void parseCenterSkill(String html) {
        
        int indexBegin = html.indexOf("Leader Skill");
        
        if (indexBegin == -1) {
            jComboBoxCenterSkill.setSelectedItem("0%");
            jLabelSubSkill.setVisible(false);
            jComboBoxSubSkill.setVisible(false);
            return;
        }
        
        int indexEnd = html.indexOf("<div class=\"cross-refs box\">");
      //  System.out.println(html.substring(indexBegin, indexEnd));
        html = html.substring(indexBegin, indexEnd);
        
        if (html.contains("パワー")) {
            jComboBoxCenterSkill.setSelectedItem("3%");
        }
        
        else if (html.contains("ハート")) {
            jComboBoxCenterSkill.setSelectedItem("6%");
        }
        
        else if (html.contains("スター")) {
            jComboBoxCenterSkill.setSelectedItem("7%");
            parseSubSkill(html, false);
        }
        
        else if (html.contains("プリンセス") || html.contains("エンジェル") || html.contains("エンプレス")) {
            
            if (html.contains("9")) {
                jComboBoxCenterSkill.setSelectedItem("9%");
            }
            
            else {
                jComboBoxCenterSkill.setSelectedItem("12%");
                if (html.contains("of its Smile")) {
                    jComboBoxBasedOn.setSelectedItem("Smile");
                }
                else if (html.contains("of its Pure")) {
                    jComboBoxBasedOn.setSelectedItem("Pure");
                }
                else {
                    jComboBoxBasedOn.setSelectedItem("Cool");
                }
            }
            
            parseSubSkill(html, true);
        }
        
    }
    
    private void parseSubSkill(String html, boolean ur) {
        
        if (html.contains("μ")) {
            
            if (ur) {
                jComboBoxSubSkill.setSelectedItem("3% μ's");
            }
            
            else {
                jComboBoxSubSkill.setSelectedItem("1% μ's");
            }
            
        }
        
        else if (html.contains("Aqours")) {
            
            if (ur) {
                jComboBoxSubSkill.setSelectedItem("3% Aqours");
            }
            
            else {
                jComboBoxSubSkill.setSelectedItem("1% Aqours");
            }
            
        }
        
        else if (html.contains("first")) {
            
            if (ur) {
                jComboBoxSubSkill.setSelectedItem("6% First-Year");
            }
            
            else {
                jComboBoxSubSkill.setSelectedItem("2% First-Year");
            }
            
        }
        
        else if (html.contains("second")) {
            
            if (ur) {
                jComboBoxSubSkill.setSelectedItem("6% Second-Year");
            }
            
            else {
                jComboBoxSubSkill.setSelectedItem("2% Second-Year");
            }
            
        }
        
        else if (html.contains("third")) {
            
            if (ur) {
                jComboBoxSubSkill.setSelectedItem("6% Third-Year");
            }
            
            else {
                jComboBoxSubSkill.setSelectedItem("2% Third-Year");
            }
            
        }
        
        else if (html.contains("Printemps")) {
            
            if (ur) {
                jComboBoxSubSkill.setSelectedItem("6% Printemps");
            }
            
            else {
                jComboBoxSubSkill.setSelectedItem("2% Printemps");
            }
            
        }
        
        else if (html.contains("lily")) {
            
            if (ur) {
                jComboBoxSubSkill.setSelectedItem("6% Lily White");
            }
            
            else {
                jComboBoxSubSkill.setSelectedItem("2% Lily White");
            }
            
        }
        
        else if (html.contains("BiBi")) {
            
            if (ur) {
                jComboBoxSubSkill.setSelectedItem("6% BiBi");
            }
            
            else {
                jComboBoxSubSkill.setSelectedItem("2% BiBi");
            }
            
        }
        
        else if (html.contains("CYaRon")) {
            
            if (ur) {
                jComboBoxSubSkill.setSelectedItem("6% CYaRon!");
            }
            
            else {
                jComboBoxSubSkill.setSelectedItem("2% CYaRon!");
            }
            
        }
        
        else if (html.contains("AZALEA")) {
            
            if (ur) {
                jComboBoxSubSkill.setSelectedItem("6% AZALEA");
            }
            
            else {
                jComboBoxSubSkill.setSelectedItem("2% AZALEA");
            }
            
        }
        
        else if (html.contains("Guilty")) {
            
            if (ur) {
                jComboBoxSubSkill.setSelectedItem("6% Guilty Kiss");
            }
            
            else {
                jComboBoxSubSkill.setSelectedItem("2% Guilty Kiss");
            }
            
        }
        
    }

    private void createCards(int[] cardIDs, GetCardJSON cardJSON, UserInput userInput) throws IOException {
        if (cardIDs[0] > 0) {
            output = cardJSON.readJSONFromURL(Integer.toString(cardIDs[0]));
            card1 = new Card(output, userInput, 1);
            generateSIS(1);
            
        }
        
        if (cardIDs[1] > 0) {
            output = cardJSON.readJSONFromURL(Integer.toString(cardIDs[1]));
            card2 = new Card(output, userInput, 2);
            generateSIS(2);
        }
        
        if (cardIDs[2] > 0) {
            output = cardJSON.readJSONFromURL(Integer.toString(cardIDs[2]));
            card3 = new Card(output, userInput, 3);
            generateSIS(3);
        }
        
        if (cardIDs[3] > 0) {
            output = cardJSON.readJSONFromURL(Integer.toString(cardIDs[3]));
            card4 = new Card(output, userInput, 4);
            generateSIS(4);
        }
        
        if (cardIDs[4] > 0) {
            output = cardJSON.readJSONFromURL(Integer.toString(cardIDs[4]));
            card5 = new Card(output, userInput, 5);
            generateSIS(5);
        }
        
        if (cardIDs[5] > 0) {
            output = cardJSON.readJSONFromURL(Integer.toString(cardIDs[5]));
            card6 = new Card(output, userInput, 6);
            generateSIS(6);
        }
        
        if (cardIDs[6] > 0) {
            output = cardJSON.readJSONFromURL(Integer.toString(cardIDs[6]));
            card7 = new Card(output, userInput, 7);
            generateSIS(7);
        }
        
        if (cardIDs[7] > 0) {
            output = cardJSON.readJSONFromURL(Integer.toString(cardIDs[7]));
            card8 = new Card(output, userInput, 8);
            generateSIS(8);
        }
        
        if (cardIDs[8] > 0) {
            output = cardJSON.readJSONFromURL(Integer.toString(cardIDs[8]));
            card9 = new Card(output, userInput, 9);
            generateSIS(9);
        }
    }

    private boolean isValidID(UserInput userInput) throws IOException, NumberFormatException {
        // Check if Card IDs are valid
        try {
            // GET total number of cards
            GetCardJSON cardJSONTotal = new GetCardJSON();
            JSONArray cardTotalArray = cardJSONTotal.readJSONFromURL("");
            JSONObject cardTotalObject = cardTotalArray.getJSONObject(0);
            if (Integer.parseInt(userInput.getCard1ID()) > cardTotalObject.getInt("count") ||
                Integer.parseInt(userInput.getCard2ID()) > cardTotalObject.getInt("count") ||
                Integer.parseInt(userInput.getCard3ID()) > cardTotalObject.getInt("count") ||    
                Integer.parseInt(userInput.getCard4ID()) > cardTotalObject.getInt("count") ||    
                Integer.parseInt(userInput.getCard5ID()) > cardTotalObject.getInt("count") ||    
                Integer.parseInt(userInput.getCard6ID()) > cardTotalObject.getInt("count") || 
                Integer.parseInt(userInput.getCard7ID()) > cardTotalObject.getInt("count") ||
                Integer.parseInt(userInput.getCard8ID()) > cardTotalObject.getInt("count") ||    
                Integer.parseInt(userInput.getCard9ID()) > cardTotalObject.getInt("count") || 
                Integer.parseInt(userInput.getCard1ID()) < 0 ||
                Integer.parseInt(userInput.getCard2ID()) < 0 ||
                Integer.parseInt(userInput.getCard3ID()) < 0 ||    
                Integer.parseInt(userInput.getCard4ID()) < 0 ||    
                Integer.parseInt(userInput.getCard5ID()) < 0 ||    
                Integer.parseInt(userInput.getCard6ID()) < 0 || 
                Integer.parseInt(userInput.getCard7ID()) < 0 ||
                Integer.parseInt(userInput.getCard8ID()) < 0 ||    
                Integer.parseInt(userInput.getCard9ID()) < 0) 
                {
                    return false;
                }
        } catch (JSONException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        return true;
    }

    private void setIdolized(UserInput userInput) {
        userInput.setCard1Idolized(jCheckBoxIdolized1.isSelected());
        userInput.setCard2Idolized(jCheckBoxIdolized2.isSelected());
        userInput.setCard3Idolized(jCheckBoxIdolized3.isSelected());
        userInput.setCard4Idolized(jCheckBoxIdolized4.isSelected());
        userInput.setCard5Idolized(jCheckBoxIdolized5.isSelected());
        userInput.setCard6Idolized(jCheckBoxIdolized6.isSelected());
        userInput.setCard7Idolized(jCheckBoxIdolized7.isSelected());
        userInput.setCard8Idolized(jCheckBoxIdolized8.isSelected());
        userInput.setCard9Idolized(jCheckBoxIdolized9.isSelected());
    }

    private void setCardID(UserInput userInput) {
        userInput.setCard1ID(jSpinnerCardID1.getValue().toString());
        userInput.setCard2ID(jSpinnerCardID2.getValue().toString());
        userInput.setCard3ID(jSpinnerCardID3.getValue().toString());
        userInput.setCard4ID(jSpinnerCardID4.getValue().toString());
        userInput.setCard5ID(jSpinnerCardID5.getValue().toString());
        userInput.setCard6ID(jSpinnerCardID6.getValue().toString());
        userInput.setCard7ID(jSpinnerCardID7.getValue().toString());
        userInput.setCard8ID(jSpinnerCardID8.getValue().toString());
        userInput.setCard9ID(jSpinnerCardID9.getValue().toString());
    }

    private void jSpinnerCardSkill1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCardSkill1StateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerCardSkill1.getValue() > 8) {
            jSpinnerCardSkill1.setValue("8");
        }
        else if ((int) jSpinnerCardSkill1.getValue() < 1) {
            jSpinnerCardSkill1.setValue("1");
        }
    }//GEN-LAST:event_jSpinnerCardSkill1StateChanged

    private void jSpinnerCardSkill2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCardSkill2StateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerCardSkill2.getValue() > 8) {
            jSpinnerCardSkill2.setValue("8");
        }
        else if ((int) jSpinnerCardSkill2.getValue() < 1) {
            jSpinnerCardSkill2.setValue("1");
        }
    }//GEN-LAST:event_jSpinnerCardSkill2StateChanged

    private void jSpinnerCardSkill3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCardSkill3StateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerCardSkill3.getValue() > 8) {
            jSpinnerCardSkill3.setValue("8");
        }
        else if ((int) jSpinnerCardSkill3.getValue() < 1) {
            jSpinnerCardSkill3.setValue("1");
        }
    }//GEN-LAST:event_jSpinnerCardSkill3StateChanged

    private void jSpinnerCardSkill4StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCardSkill4StateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerCardSkill4.getValue() > 8) {
            jSpinnerCardSkill4.setValue("8");
        }
        else if ((int) jSpinnerCardSkill4.getValue() < 1) {
            jSpinnerCardSkill4.setValue("1");
        }
    }//GEN-LAST:event_jSpinnerCardSkill4StateChanged

    private void jSpinnerCardSkill5StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCardSkill5StateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerCardSkill5.getValue() > 8) {
            jSpinnerCardSkill5.setValue("8");
        }
        else if ((int) jSpinnerCardSkill5.getValue() < 1) {
            jSpinnerCardSkill5.setValue("1");
        }
    }//GEN-LAST:event_jSpinnerCardSkill5StateChanged

    private void jSpinnerCardSkill6StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCardSkill6StateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerCardSkill6.getValue() > 8) {
            jSpinnerCardSkill6.setValue("8");
        }
        else if ((int) jSpinnerCardSkill6.getValue() < 1) {
            jSpinnerCardSkill6.setValue("1");
        }
    }//GEN-LAST:event_jSpinnerCardSkill6StateChanged

    private void jSpinnerCardSkill7StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCardSkill7StateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerCardSkill7.getValue() > 8) {
            jSpinnerCardSkill7.setValue("8");
        }
        else if ((int) jSpinnerCardSkill7.getValue() < 1) {
            jSpinnerCardSkill7.setValue("1");
        }
    }//GEN-LAST:event_jSpinnerCardSkill7StateChanged

    private void jSpinnerCardSkill8StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCardSkill8StateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerCardSkill8.getValue() > 8) {
            jSpinnerCardSkill8.setValue("8");
        }
        else if ((int) jSpinnerCardSkill8.getValue() < 1) {
            jSpinnerCardSkill8.setValue("1");
        }
    }//GEN-LAST:event_jSpinnerCardSkill8StateChanged

    private void jSpinnerCardSkill9StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCardSkill9StateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerCardSkill9.getValue() > 8) {
            jSpinnerCardSkill9.setValue("8");
        }
        else if ((int) jSpinnerCardSkill9.getValue() < 1) {
            jSpinnerCardSkill9.setValue("1");
        }
    }//GEN-LAST:event_jSpinnerCardSkill9StateChanged

    private void jComboBoxSIS2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSIS2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSIS2ActionPerformed

    private void jComboBoxAttributeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAttributeActionPerformed
        // TODO add your handling code here:
        changeBasedOn();
    }//GEN-LAST:event_jComboBoxAttributeActionPerformed

    private void jComboBoxBasedOnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBasedOnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxBasedOnActionPerformed

    private void jComboBoxCenterSkillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCenterSkillActionPerformed
        // TODO add your handling code here:
        
        if (jComboBoxCenterSkill.getSelectedItem().toString().contains("7%")) {
            jComboBoxSubSkill.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1% μ's", "1% Aqours", 
                                                                                             "2% First-Year", "2% Second-Year", "2% Third-Year", 
                                                                                             "2% Printemps", "2% Lily White", "2% BiBi",
                                                                                             "2% CYaRon!", "2% AZALEA", "2% Guilty Kiss"}));
            jLabelBasedOn.setVisible(false);
            jComboBoxBasedOn.setVisible(false);
            jLabelSubSkill.setVisible(true);
            jComboBoxSubSkill.setVisible(true);
            
        }
        
        else if (jComboBoxCenterSkill.getSelectedItem().toString().contains("9%")) {
            jComboBoxSubSkill.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3% μ's", "3% Aqours", 
                                                                                             "6% First-Year", "6% Second-Year", "6% Third-Year", 
                                                                                             "6% Printemps", "6% Lily White", "6% BiBi",
                                                                                             "6% CYaRon!", "6% AZALEA", "6% Guilty Kiss"}));
            jLabelBasedOn.setVisible(false);
            jComboBoxBasedOn.setVisible(false);
            jLabelSubSkill.setVisible(true);
            jComboBoxSubSkill.setVisible(true);
        }
        
        else if (jComboBoxCenterSkill.getSelectedItem().toString().contains("12%")) {
            
            jComboBoxSubSkill.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3% μ's", "3% Aqours", 
                                                                                             "6% First-Year", "6% Second-Year", "6% Third-Year", 
                                                                                             "6% Printemps", "6% Lily White", "6% BiBi",
                                                                                             "6% CYaRon!", "6% AZALEA", "6% Guilty Kiss"}));
            jLabelSubSkill.setVisible(true);
            jComboBoxSubSkill.setVisible(true);
            
            changeBasedOn();
            
        }
        
        else {
            jLabelBasedOn.setVisible(false);
            jComboBoxBasedOn.setVisible(false);
            jLabelSubSkill.setVisible(false);
            jComboBoxSubSkill.setVisible(false);
        }
    }//GEN-LAST:event_jComboBoxCenterSkillActionPerformed

    
    private void jButtonCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalculateActionPerformed
        // TODO add your handling code here:
        
        setUserInput();
        
        int initialSum = 0;
        int teamSum = 0;
        int centerBoost = 0;
        
        CardCalculationResults result1 = new CardCalculationResults();
        CardCalculationResults result2 = new CardCalculationResults();
        CardCalculationResults result3 = new CardCalculationResults();
        CardCalculationResults result4 = new CardCalculationResults();
        CardCalculationResults result5 = new CardCalculationResults();
        CardCalculationResults result6 = new CardCalculationResults();
        CardCalculationResults result7 = new CardCalculationResults();
        CardCalculationResults result8 = new CardCalculationResults();
        CardCalculationResults result9 = new CardCalculationResults();
        
        String[] tableModel1 = new String[] { "Card 1", "", "", "0", "0", "0", "0", "0" } ;
        String[] tableModel2 = new String[] { "Card 2", "", "", "0", "0", "0", "0", "0" } ;
        String[] tableModel3 = new String[] { "Card 3", "", "", "0", "0", "0", "0", "0" } ;
        String[] tableModel4 = new String[] { "Card 4", "", "", "0", "0", "0", "0", "0" } ;
        String[] tableModel5 = new String[] { "Card 5", "", "", "0", "0", "0", "0", "0" } ;
        String[] tableModel6 = new String[] { "Card 6", "", "", "0", "0", "0", "0", "0" } ;
        String[] tableModel7 = new String[] { "Card 7", "", "", "0", "0", "0", "0", "0" } ;
        String[] tableModel8 = new String[] { "Card 8", "", "", "0", "0", "0", "0", "0" } ;
        String[] tableModel9 = new String[] { "Card 9", "", "", "0", "0", "0", "0", "0" } ;
        
        if ((int) jSpinnerCardID1.getValue() > 0) {
            BaseStatsCalculator base1 = new BaseStatsCalculator(card1, userInput, jCheckBoxMatchingFriendCenter.isSelected(), result1);
            teamSum = teamSum + base1.getFinalBaseStats();
            centerBoost = centerBoost + base1.getCenterBoostAmount();
            
            tableModel1[0] = "Card 1";
            tableModel1[1] = card1.getName();
            tableModel1[2] = card1.getCollection();
            tableModel1[3] = Integer.toString(result1.getInitialBaseStat());
            tableModel1[4] = Integer.toString(result1.getFinalBaseStat());
            tableModel1[5] = "0";
            tableModel1[6] = "0";
            tableModel1[7] = "0";
            
            initialSum = initialSum + result1.getInitialBaseStat();

        }
        
        if ((int) jSpinnerCardID2.getValue() > 0) {
            BaseStatsCalculator base2 = new BaseStatsCalculator(card2, userInput, jCheckBoxMatchingFriendCenter.isSelected(), result2);
            teamSum = teamSum + base2.getFinalBaseStats();
            centerBoost = centerBoost + base2.getCenterBoostAmount();
            
            tableModel2[0] = "Card 2";
            tableModel2[1] = card2.getName();
            tableModel2[2] = card2.getCollection();
            tableModel2[3] = Integer.toString(result2.getInitialBaseStat());
            tableModel2[4] = Integer.toString(result2.getFinalBaseStat());
            tableModel2[5] = "0";
            tableModel2[6] = "0";
            tableModel2[7] = "0";
            
            initialSum = initialSum + result2.getInitialBaseStat();
        }
                
        if ((int) jSpinnerCardID3.getValue() > 0) {
            BaseStatsCalculator base3 = new BaseStatsCalculator(card3, userInput, jCheckBoxMatchingFriendCenter.isSelected(), result3);
            teamSum = teamSum + base3.getFinalBaseStats();
            centerBoost = centerBoost + base3.getCenterBoostAmount();
            
            tableModel3[0] = "Card 3";
            tableModel3[1] = card3.getName();
            tableModel3[2] = card3.getCollection();
            tableModel3[3] = Integer.toString(result3.getInitialBaseStat());
            tableModel3[4] = Integer.toString(result3.getFinalBaseStat());
            tableModel3[5] = "0";
            tableModel3[6] = "0";
            tableModel3[7] = "0";
            
            initialSum = initialSum + result3.getInitialBaseStat();
        }
        
        if ((int) jSpinnerCardID4.getValue() > 0) {
            BaseStatsCalculator base4 = new BaseStatsCalculator(card4, userInput, jCheckBoxMatchingFriendCenter.isSelected(), result4);
            teamSum = teamSum + base4.getFinalBaseStats();
            centerBoost = centerBoost + base4.getCenterBoostAmount();
            
            tableModel4[0] = "Card 4";
            tableModel4[1] = card4.getName();
            tableModel4[2] = card4.getCollection();
            tableModel4[3] = Integer.toString(result4.getInitialBaseStat());
            tableModel4[4] = Integer.toString(result4.getFinalBaseStat());
            tableModel4[5] = "0";
            tableModel4[6] = "0";
            tableModel4[7] = "0";
            
            initialSum = initialSum + result4.getInitialBaseStat();
        }
        if ((int) jSpinnerCardID5.getValue() > 0) {
            BaseStatsCalculator base5 = new BaseStatsCalculator(card5, userInput, jCheckBoxMatchingFriendCenter.isSelected(), result5);
            teamSum = teamSum + base5.getFinalBaseStats();
            centerBoost = centerBoost + base5.getCenterBoostAmount();
            
            tableModel5[0] = "Card 5";
            tableModel5[1] = card5.getName();
            tableModel5[2] = card5.getCollection();
            tableModel5[3] = Integer.toString(result5.getInitialBaseStat());
            tableModel5[4] = Integer.toString(result5.getFinalBaseStat());
            tableModel5[5] = "0";
            tableModel5[6] = "0";
            tableModel5[7] = "0";
            
            initialSum = initialSum + result5.getInitialBaseStat();
        }
        if ((int) jSpinnerCardID6.getValue() > 0) {
            BaseStatsCalculator base6 = new BaseStatsCalculator(card6, userInput, jCheckBoxMatchingFriendCenter.isSelected(), result6);
            teamSum = teamSum + base6.getFinalBaseStats();
            centerBoost = centerBoost + base6.getCenterBoostAmount();
            
            tableModel6[0] = "Card 6";
            tableModel6[1] = card6.getName();
            tableModel6[2] = card6.getCollection();
            tableModel6[3] = Integer.toString(result6.getInitialBaseStat());
            tableModel6[4] = Integer.toString(result6.getFinalBaseStat());
            tableModel6[5] = "0";
            tableModel6[6] = "0";
            tableModel6[7] = "0";
            
            initialSum = initialSum + result6.getInitialBaseStat();
        }
        if ((int) jSpinnerCardID7.getValue() > 0) {
            BaseStatsCalculator base7 = new BaseStatsCalculator(card7, userInput, jCheckBoxMatchingFriendCenter.isSelected(), result7);
            teamSum = teamSum + base7.getFinalBaseStats();
            centerBoost = centerBoost + base7.getCenterBoostAmount();
            
            tableModel7[0] = "Card 7";
            tableModel7[1] = card7.getName();
            tableModel7[2] = card7.getCollection();
            tableModel7[3] = Integer.toString(result7.getInitialBaseStat());
            tableModel7[4] = Integer.toString(result7.getFinalBaseStat());
            tableModel7[5] = "0";
            tableModel7[6] = "0";
            tableModel7[7] = "0";
            
            initialSum = initialSum + result7.getInitialBaseStat();
        }
        if ((int) jSpinnerCardID8.getValue() > 0) {
            BaseStatsCalculator base8 = new BaseStatsCalculator(card8, userInput, jCheckBoxMatchingFriendCenter.isSelected(), result8);
            teamSum = teamSum + base8.getFinalBaseStats();
            centerBoost = centerBoost + base8.getCenterBoostAmount();
            
            tableModel8[0] = "Card 8";
            tableModel8[1] = card8.getName();
            tableModel8[2] = card8.getCollection();
            tableModel8[3] = Integer.toString(result8.getInitialBaseStat());
            tableModel8[4] = Integer.toString(result8.getFinalBaseStat());
            tableModel8[5] = "0";
            tableModel8[6] = "0";
            tableModel8[7] = "0";
            
            initialSum = initialSum + result8.getInitialBaseStat();
        }
        if ((int) jSpinnerCardID9.getValue() > 0) {
            BaseStatsCalculator base9 = new BaseStatsCalculator(card9, userInput, jCheckBoxMatchingFriendCenter.isSelected(), result9);
            teamSum = teamSum + base9.getFinalBaseStats();
            centerBoost = centerBoost + base9.getCenterBoostAmount();
            
            tableModel9[0] = "Card 9";
            tableModel9[1] = card9.getName();
            tableModel9[2] = card9.getCollection();
            tableModel9[3] = Integer.toString(result9.getInitialBaseStat());
            tableModel9[4] = Integer.toString(result9.getFinalBaseStat());
            tableModel9[5] = "0";
            tableModel9[6] = "0";
            tableModel9[7] = "0";
            
            initialSum = initialSum + result9.getInitialBaseStat();
        }
        
        int totalFinalBaseStat = teamSum + centerBoost;
        
        jTableResults.setModel(new javax.swing.table.DefaultTableModel(
                               new Object [][] {
                               tableModel1,
                               tableModel2,
                               tableModel3,
                               tableModel4,
                               tableModel5,
                               tableModel6,
                               tableModel7,
                               tableModel8,
                               tableModel9,
                               {"Final Total", null, null, initialSum, totalFinalBaseStat, null, null, null}
                               },
                               
                               new String [] {
                               "Results", "Card Name", "Collection", "Initial Stat", "Final Stat", "Note Score", "Skill Score", "Final Score"
                               }
        
        ));
        
        jFrameResult.setVisible(true);
    }//GEN-LAST:event_jButtonCalculateActionPerformed
	
	private void jSpinnerCardID1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCardID1StateChanged
        // TODO add your handling code here:
	}//GEN-LAST:event_jSpinnerCardID1StateChanged

    private void jSpinnerNoteCountStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerNoteCountStateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerNoteCount.getValue() < 1) {
            jSpinnerNoteCount.setValue(1);
        }
    }//GEN-LAST:event_jSpinnerNoteCountStateChanged
	
	    private void jSpinnerStarNotesStateChanged(javax.swing.event.ChangeEvent evt) {                                               
        // TODO add your handling code here:
        if ((int) jSpinnerStarNotes.getValue() < 0) {
            jSpinnerStarNotes.setValue(0);
        }
    }                                              

    private void jSpinnerTimeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerTimeStateChanged
        // TODO add your handling code here:
        if ((int) jSpinnerTime.getValue() < 1) {
            jSpinnerNoteCount.setValue(1);
        }       
    }//GEN-LAST:event_jSpinnerTimeStateChanged
	
    private void jCheckBoxAllIdolizedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBoxAllIdolizedStateChanged
        // TODO add your handling code here:
        if (jCheckBoxAllIdolized.isSelected()) {
            jCheckBoxIdolized1.setSelected(true);
            jCheckBoxIdolized2.setSelected(true);
            jCheckBoxIdolized3.setSelected(true);
            jCheckBoxIdolized4.setSelected(true);
            jCheckBoxIdolized5.setSelected(true);
            jCheckBoxIdolized6.setSelected(true);
            jCheckBoxIdolized7.setSelected(true);
            jCheckBoxIdolized8.setSelected(true);
            jCheckBoxIdolized9.setSelected(true);
        }
        
        else {
            jCheckBoxIdolized1.setSelected(false);
            jCheckBoxIdolized2.setSelected(false);
            jCheckBoxIdolized3.setSelected(false);
            jCheckBoxIdolized4.setSelected(false);
            jCheckBoxIdolized5.setSelected(false);
            jCheckBoxIdolized6.setSelected(false);
            jCheckBoxIdolized7.setSelected(false);
            jCheckBoxIdolized8.setSelected(false);
            jCheckBoxIdolized9.setSelected(false);
        }
    }//GEN-LAST:event_jCheckBoxAllIdolizedStateChanged

    private void jSpinnerPerfectStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerPerfectStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerPerfectStateChanged

    private void setUserInput() {
        
        userInput.setCard1SIS(jComboBoxSIS1.getSelectedItem().toString());
        userInput.setCard2SIS(jComboBoxSIS2.getSelectedItem().toString());
        userInput.setCard3SIS(jComboBoxSIS3.getSelectedItem().toString());
        userInput.setCard4SIS(jComboBoxSIS4.getSelectedItem().toString());
        userInput.setCard5SIS(jComboBoxSIS5.getSelectedItem().toString());
        userInput.setCard6SIS(jComboBoxSIS6.getSelectedItem().toString());
        userInput.setCard7SIS(jComboBoxSIS7.getSelectedItem().toString());
        userInput.setCard8SIS(jComboBoxSIS8.getSelectedItem().toString());
        userInput.setCard9SIS(jComboBoxSIS9.getSelectedItem().toString());
        
        userInput.setAttribute(jComboBoxAttribute.getSelectedItem().toString());
        userInput.setSong(jComboBoxSongType.getSelectedItem().toString());
        userInput.setNoteCount((int) jSpinnerNoteCount.getValue());
        userInput.setTime((int) jSpinnerTime.getValue());
        userInput.setPerfectPercent((int) jSpinnerPerfect.getValue());
        userInput.setCenterSkill(jComboBoxCenterSkill.getSelectedItem().toString());
        userInput.setBasedOn(jComboBoxBasedOn.getSelectedItem().toString());
        userInput.setSubSkill(jComboBoxSubSkill.getSelectedItem().toString());
        
        if (jRadioButtonAverage.isSelected()) {
            userInput.setCalculationMethod("Average");
        }
        
        else {
            userInput.setCalculationMethod("Absolute");
        }
        
    }
    
    private void changeBasedOn() {
        
        if (jComboBoxCenterSkill.getSelectedItem().toString().contains("12%")) {
        
        if (jComboBoxAttribute.getSelectedItem().toString().contains("Smile")) {
            jComboBoxBasedOn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pure", "Cool" }));
        }
        
        else if (jComboBoxAttribute.getSelectedItem().toString().contains("Pure")) {
            jComboBoxBasedOn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Smile", "Cool" }));
        }
        
        else {
            jComboBoxBasedOn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Smile", "Pure" }));
        }
        
        jLabelBasedOn.setVisible(true);
        jComboBoxBasedOn.setVisible(true);
        
        }
        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SIFMultiToolGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SIFMultiToolGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SIFMultiToolGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SIFMultiToolGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SIFMultiToolGUI().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupCalculate;
    private javax.swing.JButton jButtonCalculate;
    private javax.swing.JButton jButtonGetCardData;
    private javax.swing.JCheckBox jCheckBoxAllIdolized;
    private javax.swing.JCheckBox jCheckBoxIdolized1;
    private javax.swing.JCheckBox jCheckBoxIdolized2;
    private javax.swing.JCheckBox jCheckBoxIdolized3;
    private javax.swing.JCheckBox jCheckBoxIdolized4;
    private javax.swing.JCheckBox jCheckBoxIdolized5;
    private javax.swing.JCheckBox jCheckBoxIdolized6;
    private javax.swing.JCheckBox jCheckBoxIdolized7;
    private javax.swing.JCheckBox jCheckBoxIdolized8;
    private javax.swing.JCheckBox jCheckBoxIdolized9;
    private javax.swing.JCheckBox jCheckBoxMatchingFriendCenter;
    private javax.swing.JCheckBox jCheckBoxNormalizeSong;
    private javax.swing.JComboBox<String> jComboBoxAttribute;
    private javax.swing.JComboBox<String> jComboBoxBasedOn;
    private javax.swing.JComboBox<String> jComboBoxCenterSkill;
    private javax.swing.JComboBox<String> jComboBoxSIS1;
    private javax.swing.JComboBox<String> jComboBoxSIS2;
    private javax.swing.JComboBox<String> jComboBoxSIS3;
    private javax.swing.JComboBox<String> jComboBoxSIS4;
    private javax.swing.JComboBox<String> jComboBoxSIS5;
    private javax.swing.JComboBox<String> jComboBoxSIS6;
    private javax.swing.JComboBox<String> jComboBoxSIS7;
    private javax.swing.JComboBox<String> jComboBoxSIS8;
    private javax.swing.JComboBox<String> jComboBoxSIS9;
    private javax.swing.JComboBox<String> jComboBoxSongType;
    private javax.swing.JComboBox<String> jComboBoxSubSkill;
    private javax.swing.JFrame jFrameResult;
    private javax.swing.JLabel jLabelAttribute;
    private javax.swing.JLabel jLabelBasedOn;
    private javax.swing.JLabel jLabelCard1;
    private javax.swing.JLabel jLabelCard2;
    private javax.swing.JLabel jLabelCard3;
    private javax.swing.JLabel jLabelCard4;
    private javax.swing.JLabel jLabelCard5;
    private javax.swing.JLabel jLabelCard6;
    private javax.swing.JLabel jLabelCard7;
    private javax.swing.JLabel jLabelCard8;
    private javax.swing.JLabel jLabelCard9;
    private javax.swing.JLabel jLabelCardID;
    private javax.swing.JLabel jLabelCardSkill;
    private javax.swing.JLabel jLabelCenterSkill;
    private javax.swing.JLabel jLabelNoteCount;
    private javax.swing.JLabel jLabelPerfect;
    private javax.swing.JLabel jLabelSIS;
    private javax.swing.JLabel jLabelSongType;
    private javax.swing.JLabel jLabelStarNotes;
    private javax.swing.JLabel jLabelStep1;
    private javax.swing.JLabel jLabelStep2;
    private javax.swing.JLabel jLabelSubSkill;
    private javax.swing.JLabel jLabelSuccess;
    private javax.swing.JLabel jLabelTime;
    private javax.swing.JRadioButton jRadioButtonAbsolute;
    private javax.swing.JRadioButton jRadioButtonAverage;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerCardID1;
    private javax.swing.JSpinner jSpinnerCardID2;
    private javax.swing.JSpinner jSpinnerCardID3;
    private javax.swing.JSpinner jSpinnerCardID4;
    private javax.swing.JSpinner jSpinnerCardID5;
    private javax.swing.JSpinner jSpinnerCardID6;
    private javax.swing.JSpinner jSpinnerCardID7;
    private javax.swing.JSpinner jSpinnerCardID8;
    private javax.swing.JSpinner jSpinnerCardID9;
    private javax.swing.JSpinner jSpinnerCardSkill1;
    private javax.swing.JSpinner jSpinnerCardSkill2;
    private javax.swing.JSpinner jSpinnerCardSkill3;
    private javax.swing.JSpinner jSpinnerCardSkill4;
    private javax.swing.JSpinner jSpinnerCardSkill5;
    private javax.swing.JSpinner jSpinnerCardSkill6;
    private javax.swing.JSpinner jSpinnerCardSkill7;
    private javax.swing.JSpinner jSpinnerCardSkill8;
    private javax.swing.JSpinner jSpinnerCardSkill9;
    private javax.swing.JSpinner jSpinnerNoteCount;
    private javax.swing.JSpinner jSpinnerPerfect;
    private javax.swing.JSpinner jSpinnerStarNotes;
    private javax.swing.JSpinner jSpinnerTime;
    private javax.swing.JTable jTableResults;
    // End of variables declaration//GEN-END:variables

}

