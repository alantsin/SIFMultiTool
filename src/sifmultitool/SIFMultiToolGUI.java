/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sifmultitool;

import java.io.IOException;
import java.util.*;
import org.jsoup.Jsoup;

/**
 *
 * @author Alan
 */
public class SIFMultiToolGUI extends javax.swing.JFrame {
    
    int[][] SkillLevelCard1 = new int[8][2];
    int[][] SkillLevelCard2 = new int[8][2];
    int[][] SkillLevelCard3 = new int[8][2];
    int[][] SkillLevelCard4 = new int[8][2];
    int[][] SkillLevelCard5 = new int[8][2];
    int[][] SkillLevelCard6 = new int[8][2];
    int[][] SkillLevelCard7 = new int[8][2];
    int[][] SkillLevelCard8 = new int[8][2];
    int[][] SkillLevelCard9 = new int[8][2];

    /**
     * Creates new form SIFMultiToolGUI
     */
    public SIFMultiToolGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelCardID1 = new javax.swing.JLabel();
        jLabelCardID2 = new javax.swing.JLabel();
        jLabelCardID3 = new javax.swing.JLabel();
        jLabelCardID4 = new javax.swing.JLabel();
        jLabelCardID5 = new javax.swing.JLabel();
        jLabelCardID6 = new javax.swing.JLabel();
        jLabelCardID7 = new javax.swing.JLabel();
        jLabelCardID8 = new javax.swing.JLabel();
        jLabelCardID9 = new javax.swing.JLabel();
        jSpinnerCardID1 = new javax.swing.JSpinner();
        jSpinnerCardID2 = new javax.swing.JSpinner();
        jSpinnerCardID3 = new javax.swing.JSpinner();
        jSpinnerCardID4 = new javax.swing.JSpinner();
        jSpinnerCardID5 = new javax.swing.JSpinner();
        jSpinnerCardID6 = new javax.swing.JSpinner();
        jSpinnerCardID7 = new javax.swing.JSpinner();
        jSpinnerCardID8 = new javax.swing.JSpinner();
        jSpinnerCardID9 = new javax.swing.JSpinner();
        jCheckBoxIdolized1 = new javax.swing.JCheckBox();
        jCheckBoxIdolized2 = new javax.swing.JCheckBox();
        jCheckBoxIdolized3 = new javax.swing.JCheckBox();
        jCheckBoxIdolized4 = new javax.swing.JCheckBox();
        jCheckBoxIdolized5 = new javax.swing.JCheckBox();
        jCheckBoxIdolized6 = new javax.swing.JCheckBox();
        jCheckBoxIdolized7 = new javax.swing.JCheckBox();
        jCheckBoxIdolized8 = new javax.swing.JCheckBox();
        jCheckBoxIdolized9 = new javax.swing.JCheckBox();
        jButtonGetCardData = new javax.swing.JButton();
        jLabelStep1 = new javax.swing.JLabel();
        jLabelSuccess = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SIF MultiTool Version 1.0 by Umidah");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(450, 400));
        setSize(new java.awt.Dimension(950, 400));

        jLabelCardID1.setText("Card 1 ID");

        jLabelCardID2.setText("Card 2 ID");

        jLabelCardID3.setText("Card 3 ID");

        jLabelCardID4.setText("Card 4 ID");

        jLabelCardID5.setText("Card 5 ID");

        jLabelCardID6.setText("Card 6 ID");

        jLabelCardID7.setText("Card 7 ID");

        jLabelCardID8.setText("Card 8 ID");

        jLabelCardID9.setText("Card 9 ID");
        jLabelCardID9.setToolTipText("");

        jSpinnerCardID1.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID1, "####"));
        jSpinnerCardID1.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID1.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID2.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID2, "####"));
        jSpinnerCardID2.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID2.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID3.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID3, "####"));
        jSpinnerCardID3.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID3.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID4.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID4, "####"));
        jSpinnerCardID4.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID4.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID5.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID5, "####"));
        jSpinnerCardID5.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID5.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID6.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID6, "####"));
        jSpinnerCardID6.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID6.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID7.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID7, "####"));
        jSpinnerCardID7.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID7.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID8.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID8, "####"));
        jSpinnerCardID8.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID8.setPreferredSize(new java.awt.Dimension(25, 20));

        jSpinnerCardID9.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinnerCardID9, "####"));
        jSpinnerCardID9.setMinimumSize(new java.awt.Dimension(25, 25));
        jSpinnerCardID9.setPreferredSize(new java.awt.Dimension(25, 20));

        jCheckBoxIdolized1.setText("Idolized");

        jCheckBoxIdolized2.setText("Idolized");

        jCheckBoxIdolized3.setText("Idolized");

        jCheckBoxIdolized4.setText("Idolized");

        jCheckBoxIdolized5.setText("Idolized");

        jCheckBoxIdolized6.setText("Idolized");

        jCheckBoxIdolized7.setText("Idolized");

        jCheckBoxIdolized8.setText("Idolized");

        jCheckBoxIdolized9.setText("Idolized");

        jButtonGetCardData.setText("Get Card Data");
        jButtonGetCardData.setToolTipText("");
        jButtonGetCardData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGetCardDataActionPerformed(evt);
            }
        });

        jLabelStep1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelStep1.setText("Step 1:");
        jLabelStep1.setToolTipText("");

        jLabelSuccess.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabelSuccess.setText("Data successfully obtained!");
        jLabelSuccess.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelCardID1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinnerCardID1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxIdolized1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelCardID2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinnerCardID2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxIdolized2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelCardID3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinnerCardID3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxIdolized3))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelCardID4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinnerCardID4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxIdolized4))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelCardID5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinnerCardID5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxIdolized5))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelCardID6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinnerCardID6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxIdolized6))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelCardID7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinnerCardID7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxIdolized7))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelCardID8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinnerCardID8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxIdolized8))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelCardID9)
                            .addComponent(jLabelStep1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSpinnerCardID9, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBoxIdolized9))
                            .addComponent(jButtonGetCardData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelSuccess, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(510, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCardID1)
                    .addComponent(jSpinnerCardID1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCardID2)
                    .addComponent(jSpinnerCardID2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCardID3)
                    .addComponent(jSpinnerCardID3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCardID4)
                    .addComponent(jSpinnerCardID4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCardID5)
                    .addComponent(jSpinnerCardID5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCardID6)
                    .addComponent(jSpinnerCardID6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCardID7)
                    .addComponent(jSpinnerCardID7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCardID8)
                    .addComponent(jSpinnerCardID8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCardID9)
                    .addComponent(jSpinnerCardID9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxIdolized9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGetCardData)
                    .addComponent(jLabelStep1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelSuccess)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabelSuccess.setVisible(false);

        setBounds(0, 0, 720, 437);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGetCardDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGetCardDataActionPerformed
        // TODO add your handling code here:

        int[] cardIDs = { (int) jSpinnerCardID1.getValue(), (int) jSpinnerCardID2.getValue(), (int) jSpinnerCardID3.getValue(),
                          (int) jSpinnerCardID4.getValue(), (int) jSpinnerCardID5.getValue(), (int) jSpinnerCardID6.getValue(),
                          (int) jSpinnerCardID7.getValue(), (int) jSpinnerCardID8.getValue(), (int) jSpinnerCardID9.getValue(),
        }; 
        
        
        try {
            for (int i = 0; i < 9; i++) {
                if (cardIDs[i] > 0) {
                    String html = Jsoup.connect("https://sif.kirara.ca/card/" + Integer.toString(cardIDs[i])).get().html();
                    int indexBegin = html.indexOf("document.precalc");
                    int indexEnd = html.indexOf("document.cllite_ids");
                    System.out.println(html.substring(indexBegin, indexEnd));
                    
                    html = html.substring(indexBegin, indexEnd);
                    indexBegin = html.indexOf("skill");
                    indexEnd = html.indexOf("cid");
                    System.out.println(html.substring(indexBegin, indexEnd));
                    
                    html = html.substring(indexBegin, indexEnd);
                    
                    if (html.contains("null")) {
                        
                    }
                    
                    else {
                        String temp;
                        
                        for (int j = 0; j < 8; j++) {
                            
                            if (i == 0) {
                                
                                indexEnd = html.indexOf(",");
                                temp = html.substring(0, indexEnd);
                                temp = temp.replaceAll("[^\\d.]", "");
                                
                                SkillLevelCard1[j][0] = Integer.parseInt(temp);
                                html = html.substring(indexEnd + 1, html.length());
                                
                                
                                indexEnd = html.indexOf(",");
                                temp = html.substring(0, indexEnd);
                                temp = temp.replaceAll("[^\\d.]", "");
                                
                                SkillLevelCard1[j][1] = (int) Double.parseDouble(temp);
                                html = html.substring(indexEnd + 1, html.length());
                                
                            }
                            
                            else if (i == 1) {
                                
                                indexEnd = html.indexOf(",");
                                temp = html.substring(0, indexEnd);
                                temp = temp.replaceAll("[^\\d.]", "");
                                
                                SkillLevelCard2[j][0] = Integer.parseInt(temp);
                                html = html.substring(indexEnd + 1, html.length());
                                
                                
                                indexEnd = html.indexOf(",");
                                temp = html.substring(0, indexEnd);
                                temp = temp.replaceAll("[^\\d.]", "");
                                
                                SkillLevelCard2[j][1] = (int) Double.parseDouble(temp);
                                html = html.substring(indexEnd + 1, html.length());
                                
                            }
                            
                            else if (i == 2) {
                                
                                indexEnd = html.indexOf(",");
                                temp = html.substring(0, indexEnd);
                                temp = temp.replaceAll("[^\\d.]", "");
                                
                                SkillLevelCard3[j][0] = Integer.parseInt(temp);
                                html = html.substring(indexEnd + 1, html.length());
                                
                                
                                indexEnd = html.indexOf(",");
                                temp = html.substring(0, indexEnd);
                                temp = temp.replaceAll("[^\\d.]", "");
                                
                                SkillLevelCard3[j][1] = (int) Double.parseDouble(temp);
                                html = html.substring(indexEnd + 1, html.length());
                                
                            }
                            
                            else if (i == 3) {
                                
                                indexEnd = html.indexOf(",");
                                temp = html.substring(0, indexEnd);
                                temp = temp.replaceAll("[^\\d.]", "");
                                
                                SkillLevelCard4[j][0] = Integer.parseInt(temp);
                                html = html.substring(indexEnd + 1, html.length());
                                
                                
                                indexEnd = html.indexOf(",");
                                temp = html.substring(0, indexEnd);
                                temp = temp.replaceAll("[^\\d.]", "");
                                
                                SkillLevelCard4[j][1] = (int) Double.parseDouble(temp);
                                html = html.substring(indexEnd + 1, html.length());
                                
                            }
                            
                            else if (i == 4) {
                                
                                indexEnd = html.indexOf(",");
                                temp = html.substring(0, indexEnd);
                                temp = temp.replaceAll("[^\\d.]", "");
                                
                                SkillLevelCard5[j][0] = Integer.parseInt(temp);
                                html = html.substring(indexEnd + 1, html.length());
                                
                                
                                indexEnd = html.indexOf(",");
                                temp = html.substring(0, indexEnd);
                                temp = temp.replaceAll("[^\\d.]", "");
                                
                                SkillLevelCard5[j][1] = (int) Double.parseDouble(temp);
                                html = html.substring(indexEnd + 1, html.length());
                                
                            }
                            
                            else if (i == 5) {
                                
                                indexEnd = html.indexOf(",");
                                temp = html.substring(0, indexEnd);
                                temp = temp.replaceAll("[^\\d.]", "");
                                
                                SkillLevelCard6[j][0] = Integer.parseInt(temp);
                                html = html.substring(indexEnd + 1, html.length());
                                
                                
                                indexEnd = html.indexOf(",");
                                temp = html.substring(0, indexEnd);
                                temp = temp.replaceAll("[^\\d.]", "");
                                
                                SkillLevelCard6[j][1] = (int) Double.parseDouble(temp);
                                html = html.substring(indexEnd + 1, html.length());
                                
                            }
                            
                            else if (i == 6) {
                                
                                indexEnd = html.indexOf(",");
                                temp = html.substring(0, indexEnd);
                                temp = temp.replaceAll("[^\\d.]", "");
                                
                                SkillLevelCard7[j][0] = Integer.parseInt(temp);
                                html = html.substring(indexEnd + 1, html.length());
                                
                                
                                indexEnd = html.indexOf(",");
                                temp = html.substring(0, indexEnd);
                                temp = temp.replaceAll("[^\\d.]", "");
                                
                                SkillLevelCard7[j][1] = (int) Double.parseDouble(temp);
                                html = html.substring(indexEnd + 1, html.length());
                                
                            }
                            
                            else if (i == 7) {
                                
                                indexEnd = html.indexOf(",");
                                temp = html.substring(0, indexEnd);
                                temp = temp.replaceAll("[^\\d.]", "");
                                
                                SkillLevelCard8[j][0] = Integer.parseInt(temp);
                                html = html.substring(indexEnd + 1, html.length());
                                
                                
                                indexEnd = html.indexOf(",");
                                temp = html.substring(0, indexEnd);
                                temp = temp.replaceAll("[^\\d.]", "");
                                
                                SkillLevelCard8[j][1] = (int) Double.parseDouble(temp);
                                html = html.substring(indexEnd + 1, html.length());
                                
                            }
                            
                            else {
                                
                                indexEnd = html.indexOf(",");
                                temp = html.substring(0, indexEnd);
                                temp = temp.replaceAll("[^\\d.]", "");
                                
                                SkillLevelCard9[j][0] = Integer.parseInt(temp);
                                html = html.substring(indexEnd + 1, html.length());
                                
                                
                                indexEnd = html.indexOf(",");
                                temp = html.substring(0, indexEnd);
                                temp = temp.replaceAll("[^\\d.]", "");
                                
                                SkillLevelCard9[j][1] = (int) Double.parseDouble(temp);
                                html = html.substring(indexEnd + 1, html.length());
                                
                            }
                            
                        }
                        
                    }
                    
                }
                else {
                    
                }
            }
            
            System.out.println("Done");
            
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        
         jLabelSuccess.setVisible(true);
        
    }//GEN-LAST:event_jButtonGetCardDataActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SIFMultiToolGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SIFMultiToolGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SIFMultiToolGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SIFMultiToolGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SIFMultiToolGUI().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonGetCardData;
    private javax.swing.JCheckBox jCheckBoxIdolized1;
    private javax.swing.JCheckBox jCheckBoxIdolized2;
    private javax.swing.JCheckBox jCheckBoxIdolized3;
    private javax.swing.JCheckBox jCheckBoxIdolized4;
    private javax.swing.JCheckBox jCheckBoxIdolized5;
    private javax.swing.JCheckBox jCheckBoxIdolized6;
    private javax.swing.JCheckBox jCheckBoxIdolized7;
    private javax.swing.JCheckBox jCheckBoxIdolized8;
    private javax.swing.JCheckBox jCheckBoxIdolized9;
    private javax.swing.JLabel jLabelCardID1;
    private javax.swing.JLabel jLabelCardID2;
    private javax.swing.JLabel jLabelCardID3;
    private javax.swing.JLabel jLabelCardID4;
    private javax.swing.JLabel jLabelCardID5;
    private javax.swing.JLabel jLabelCardID6;
    private javax.swing.JLabel jLabelCardID7;
    private javax.swing.JLabel jLabelCardID8;
    private javax.swing.JLabel jLabelCardID9;
    private javax.swing.JLabel jLabelStep1;
    private javax.swing.JLabel jLabelSuccess;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jSpinnerCardID1;
    private javax.swing.JSpinner jSpinnerCardID2;
    private javax.swing.JSpinner jSpinnerCardID3;
    private javax.swing.JSpinner jSpinnerCardID4;
    private javax.swing.JSpinner jSpinnerCardID5;
    private javax.swing.JSpinner jSpinnerCardID6;
    private javax.swing.JSpinner jSpinnerCardID7;
    private javax.swing.JSpinner jSpinnerCardID8;
    private javax.swing.JSpinner jSpinnerCardID9;
    // End of variables declaration//GEN-END:variables

}

